//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace GISA.Webservices.MIND
{

    // 
    // This source code was auto-generated by wsdl, Version=2.0.50727.3038.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "XarqDigitalizacaoWebServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class XarqDigitalizacaoWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback TestImageConversionOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidProcessLocalOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidProcessWorkLocalOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidProcessOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidProcessWorkOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileGridOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileDocumentGridOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileAttachmentOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileAttachmentDocumentDividedOperationCompleted;

        private System.Threading.SendOrPostCallback DigiFileAttachmentDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetAttachmentInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetAttachmentInfoDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback CancelAttachmentOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiFileTypeOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiFileTypeMultipleServerOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiFileTypeMultipleServerGridOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiFileTypeOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiFileTypeMultipleServerOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiFileTypeMultipleServerGridOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiDocumentFileTypeOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiDocumentFileTypeMultipleServerOperationCompleted;

        private System.Threading.SendOrPostCallback BeginDigiDocumentFileTypeMultipleServerGridOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiDocumentFileTypeOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiDocumentFileTypeMultipleServerOperationCompleted;

        private System.Threading.SendOrPostCallback FinishDigiDocumentFileTypeMultipleServerGridOperationCompleted;

        private System.Threading.SendOrPostCallback ValidateImageOperationCompleted;

        private System.Threading.SendOrPostCallback CancelImageOperationCompleted;

        private System.Threading.SendOrPostCallback PrintImageOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageGridOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageInfoGridOperationCompleted;

        private System.Threading.SendOrPostCallback SendFilePartOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileGridOperationCompleted;

        private System.Threading.SendOrPostCallback GetFilePageIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileAttachmentIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileFromIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageDocumentGridOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageInfoDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetImageInfoDocumentGridOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileDocumentGridOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileDocumentAttachmentOperationCompleted;

        private System.Threading.SendOrPostCallback GetPDFDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback GetDocumentMainFileOperationCompleted;

        private System.Threading.SendOrPostCallback GetSpecialtiesXarqOperationCompleted;

        private System.Threading.SendOrPostCallback GetSpecialtiesOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserIDEncryptedOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserNameEncryptedOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateImageDetailOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateImageMetaDataFileOperationCompleted;

        private System.Threading.SendOrPostCallback IsObraDigiOperationCompleted;

        private System.Threading.SendOrPostCallback IsProcessoDigiOperationCompleted;

        private System.Threading.SendOrPostCallback IsDocumentDigiOperationCompleted;

        private System.Threading.SendOrPostCallback GetDocumentDigiListOperationCompleted;

        private System.Threading.SendOrPostCallback GetServerTimeOperationCompleted;

        private System.Threading.SendOrPostCallback GetDigiWorkIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetDigiProcessIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetDigiSpecialtyIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetDigiDocumentIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetDigiDocumentIDEditableOperationCompleted;

        private System.Threading.SendOrPostCallback IsDigiDocumentEditableOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateDocumentEditableOperationCompleted;

        private System.Threading.SendOrPostCallback IsValidPageOperationCompleted;

        /// <remarks/>
        public XarqDigitalizacaoWebService()
        {
            this.Url = "http://10.10.11.12/XarqDigitalizacaoWebservice/XarqDigitalizacaoWebservice.asmx";
        }

        /// <remarks/>
        public event TestImageConversionCompletedEventHandler TestImageConversionCompleted;

        /// <remarks/>
        public event IsValidProcessLocalCompletedEventHandler IsValidProcessLocalCompleted;

        /// <remarks/>
        public event IsValidProcessWorkLocalCompletedEventHandler IsValidProcessWorkLocalCompleted;

        /// <remarks/>
        public event IsValidProcessCompletedEventHandler IsValidProcessCompleted;

        /// <remarks/>
        public event IsValidProcessWorkCompletedEventHandler IsValidProcessWorkCompleted;

        /// <remarks/>
        public event IsValidDocumentCompletedEventHandler IsValidDocumentCompleted;

        /// <remarks/>
        public event DigiFileCompletedEventHandler DigiFileCompleted;

        /// <remarks/>
        public event DigiFileGridCompletedEventHandler DigiFileGridCompleted;

        /// <remarks/>
        public event DigiFileDocumentCompletedEventHandler DigiFileDocumentCompleted;

        /// <remarks/>
        public event DigiFileDocumentGridCompletedEventHandler DigiFileDocumentGridCompleted;

        /// <remarks/>
        public event DigiFileAttachmentCompletedEventHandler DigiFileAttachmentCompleted;

        /// <remarks/>
        public event DigiFileAttachmentDocumentDividedCompletedEventHandler DigiFileAttachmentDocumentDividedCompleted;

        /// <remarks/>
        public event DigiFileAttachmentDocumentCompletedEventHandler DigiFileAttachmentDocumentCompleted;

        /// <remarks/>
        public event GetAttachmentInfoCompletedEventHandler GetAttachmentInfoCompleted;

        /// <remarks/>
        public event GetAttachmentInfoDocumentCompletedEventHandler GetAttachmentInfoDocumentCompleted;

        /// <remarks/>
        public event CancelAttachmentCompletedEventHandler CancelAttachmentCompleted;

        /// <remarks/>
        public event BeginDigiCompletedEventHandler BeginDigiCompleted;

        /// <remarks/>
        public event BeginDigiFileTypeCompletedEventHandler BeginDigiFileTypeCompleted;

        /// <remarks/>
        public event BeginDigiFileTypeMultipleServerCompletedEventHandler BeginDigiFileTypeMultipleServerCompleted;

        /// <remarks/>
        public event BeginDigiFileTypeMultipleServerGridCompletedEventHandler BeginDigiFileTypeMultipleServerGridCompleted;

        /// <remarks/>
        public event FinishDigiCompletedEventHandler FinishDigiCompleted;

        /// <remarks/>
        public event FinishDigiFileTypeCompletedEventHandler FinishDigiFileTypeCompleted;

        /// <remarks/>
        public event FinishDigiFileTypeMultipleServerCompletedEventHandler FinishDigiFileTypeMultipleServerCompleted;

        /// <remarks/>
        public event FinishDigiFileTypeMultipleServerGridCompletedEventHandler FinishDigiFileTypeMultipleServerGridCompleted;

        /// <remarks/>
        public event BeginDigiDocumentCompletedEventHandler BeginDigiDocumentCompleted;

        /// <remarks/>
        public event BeginDigiDocumentFileTypeCompletedEventHandler BeginDigiDocumentFileTypeCompleted;

        /// <remarks/>
        public event BeginDigiDocumentFileTypeMultipleServerCompletedEventHandler BeginDigiDocumentFileTypeMultipleServerCompleted;

        /// <remarks/>
        public event BeginDigiDocumentFileTypeMultipleServerGridCompletedEventHandler BeginDigiDocumentFileTypeMultipleServerGridCompleted;

        /// <remarks/>
        public event FinishDigiDocumentCompletedEventHandler FinishDigiDocumentCompleted;

        /// <remarks/>
        public event FinishDigiDocumentFileTypeCompletedEventHandler FinishDigiDocumentFileTypeCompleted;

        /// <remarks/>
        public event FinishDigiDocumentFileTypeMultipleServerCompletedEventHandler FinishDigiDocumentFileTypeMultipleServerCompleted;

        /// <remarks/>
        public event FinishDigiDocumentFileTypeMultipleServerGridCompletedEventHandler FinishDigiDocumentFileTypeMultipleServerGridCompleted;

        /// <remarks/>
        public event ValidateImageCompletedEventHandler ValidateImageCompleted;

        /// <remarks/>
        public event CancelImageCompletedEventHandler CancelImageCompleted;

        /// <remarks/>
        public event PrintImageCompletedEventHandler PrintImageCompleted;

        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;

        /// <remarks/>
        public event GetImageGridCompletedEventHandler GetImageGridCompleted;

        /// <remarks/>
        public event GetImageInfoCompletedEventHandler GetImageInfoCompleted;

        /// <remarks/>
        public event GetImageInfoGridCompletedEventHandler GetImageInfoGridCompleted;

        /// <remarks/>
        public event SendFilePartCompletedEventHandler SendFilePartCompleted;

        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;

        /// <remarks/>
        public event GetFileGridCompletedEventHandler GetFileGridCompleted;

        /// <remarks/>
        public event GetFilePageIDCompletedEventHandler GetFilePageIDCompleted;

        /// <remarks/>
        public event GetFileAttachmentIDCompletedEventHandler GetFileAttachmentIDCompleted;

        /// <remarks/>
        public event GetFileFromIDCompletedEventHandler GetFileFromIDCompleted;

        /// <remarks/>
        public event GetImageDocumentCompletedEventHandler GetImageDocumentCompleted;

        /// <remarks/>
        public event GetImageDocumentGridCompletedEventHandler GetImageDocumentGridCompleted;

        /// <remarks/>
        public event GetImageInfoDocumentCompletedEventHandler GetImageInfoDocumentCompleted;

        /// <remarks/>
        public event GetImageInfoDocumentGridCompletedEventHandler GetImageInfoDocumentGridCompleted;

        /// <remarks/>
        public event GetFileDocumentCompletedEventHandler GetFileDocumentCompleted;

        /// <remarks/>
        public event GetFileDocumentGridCompletedEventHandler GetFileDocumentGridCompleted;

        /// <remarks/>
        public event GetFileDocumentAttachmentCompletedEventHandler GetFileDocumentAttachmentCompleted;

        /// <remarks/>
        public event GetPDFDocumentCompletedEventHandler GetPDFDocumentCompleted;

        /// <remarks/>
        public event GetDocumentMainFileCompletedEventHandler GetDocumentMainFileCompleted;

        /// <remarks/>
        public event GetSpecialtiesXarqCompletedEventHandler GetSpecialtiesXarqCompleted;

        /// <remarks/>
        public event GetSpecialtiesCompletedEventHandler GetSpecialtiesCompleted;

        /// <remarks/>
        public event GetUserIDCompletedEventHandler GetUserIDCompleted;

        /// <remarks/>
        public event GetUserIDEncryptedCompletedEventHandler GetUserIDEncryptedCompleted;

        /// <remarks/>
        public event GetUserNameEncryptedCompletedEventHandler GetUserNameEncryptedCompleted;

        /// <remarks/>
        public event UpdateImageDetailCompletedEventHandler UpdateImageDetailCompleted;

        /// <remarks/>
        public event UpdateImageMetaDataFileCompletedEventHandler UpdateImageMetaDataFileCompleted;

        /// <remarks/>
        public event IsObraDigiCompletedEventHandler IsObraDigiCompleted;

        /// <remarks/>
        public event IsProcessoDigiCompletedEventHandler IsProcessoDigiCompleted;

        /// <remarks/>
        public event IsDocumentDigiCompletedEventHandler IsDocumentDigiCompleted;

        /// <remarks/>
        public event GetDocumentDigiListCompletedEventHandler GetDocumentDigiListCompleted;

        /// <remarks/>
        public event GetServerTimeCompletedEventHandler GetServerTimeCompleted;

        /// <remarks/>
        public event GetDigiWorkIDCompletedEventHandler GetDigiWorkIDCompleted;

        /// <remarks/>
        public event GetDigiProcessIDCompletedEventHandler GetDigiProcessIDCompleted;

        /// <remarks/>
        public event GetDigiSpecialtyIDCompletedEventHandler GetDigiSpecialtyIDCompleted;

        /// <remarks/>
        public event GetDigiDocumentIDCompletedEventHandler GetDigiDocumentIDCompleted;

        /// <remarks/>
        public event GetDigiDocumentIDEditableCompletedEventHandler GetDigiDocumentIDEditableCompleted;

        /// <remarks/>
        public event IsDigiDocumentEditableCompletedEventHandler IsDigiDocumentEditableCompleted;

        /// <remarks/>
        public event UpdateDocumentEditableCompletedEventHandler UpdateDocumentEditableCompleted;

        /// <remarks/>
        public event IsValidPageCompletedEventHandler IsValidPageCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestImageConversion", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TestImageConversion()
        {
            object[] results = this.Invoke("TestImageConversion", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginTestImageConversion(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("TestImageConversion", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndTestImageConversion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void TestImageConversionAsync()
        {
            this.TestImageConversionAsync(null);
        }

        /// <remarks/>
        public void TestImageConversionAsync(object userState)
        {
            if ((this.TestImageConversionOperationCompleted == null))
            {
                this.TestImageConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestImageConversionOperationCompleted);
            }
            this.InvokeAsync("TestImageConversion", new object[0], this.TestImageConversionOperationCompleted, userState);
        }

        private void OnTestImageConversionOperationCompleted(object arg)
        {
            if ((this.TestImageConversionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestImageConversionCompleted(this, new TestImageConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidProcessLocal", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidProcessLocal(ref string strProcesso, ref string strObra, out int nProcIDXarq, out string strLocalizacao, out int nTotalEspecialidades)
        {
            object[] results = this.Invoke("IsValidProcessLocal", new object[] {
                    strProcesso,
                    strObra});
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            strLocalizacao = ((string)(results[4]));
            nTotalEspecialidades = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidProcessLocal(string strProcesso, string strObra, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidProcessLocal", new object[] {
                    strProcesso,
                    strObra}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidProcessLocal(System.IAsyncResult asyncResult, out string strProcesso, out string strObra, out int nProcIDXarq, out string strLocalizacao, out int nTotalEspecialidades)
        {
            object[] results = this.EndInvoke(asyncResult);
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            strLocalizacao = ((string)(results[4]));
            nTotalEspecialidades = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidProcessLocalAsync(string strProcesso, string strObra)
        {
            this.IsValidProcessLocalAsync(strProcesso, strObra, null);
        }

        /// <remarks/>
        public void IsValidProcessLocalAsync(string strProcesso, string strObra, object userState)
        {
            if ((this.IsValidProcessLocalOperationCompleted == null))
            {
                this.IsValidProcessLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidProcessLocalOperationCompleted);
            }
            this.InvokeAsync("IsValidProcessLocal", new object[] {
                    strProcesso,
                    strObra}, this.IsValidProcessLocalOperationCompleted, userState);
        }

        private void OnIsValidProcessLocalOperationCompleted(object arg)
        {
            if ((this.IsValidProcessLocalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidProcessLocalCompleted(this, new IsValidProcessLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidProcessWorkLocal", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidProcessWorkLocal(ref string strProcesso, ref string strObra, out int nProcIDXarq, out int nObraIDXarq, out string strLocalizacao, out int nTotalEspecialidades)
        {
            object[] results = this.Invoke("IsValidProcessWorkLocal", new object[] {
                    strProcesso,
                    strObra});
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nObraIDXarq = ((int)(results[4]));
            strLocalizacao = ((string)(results[5]));
            nTotalEspecialidades = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidProcessWorkLocal(string strProcesso, string strObra, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidProcessWorkLocal", new object[] {
                    strProcesso,
                    strObra}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidProcessWorkLocal(System.IAsyncResult asyncResult, out string strProcesso, out string strObra, out int nProcIDXarq, out int nObraIDXarq, out string strLocalizacao, out int nTotalEspecialidades)
        {
            object[] results = this.EndInvoke(asyncResult);
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nObraIDXarq = ((int)(results[4]));
            strLocalizacao = ((string)(results[5]));
            nTotalEspecialidades = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidProcessWorkLocalAsync(string strProcesso, string strObra)
        {
            this.IsValidProcessWorkLocalAsync(strProcesso, strObra, null);
        }

        /// <remarks/>
        public void IsValidProcessWorkLocalAsync(string strProcesso, string strObra, object userState)
        {
            if ((this.IsValidProcessWorkLocalOperationCompleted == null))
            {
                this.IsValidProcessWorkLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidProcessWorkLocalOperationCompleted);
            }
            this.InvokeAsync("IsValidProcessWorkLocal", new object[] {
                    strProcesso,
                    strObra}, this.IsValidProcessWorkLocalOperationCompleted, userState);
        }

        private void OnIsValidProcessWorkLocalOperationCompleted(object arg)
        {
            if ((this.IsValidProcessWorkLocalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidProcessWorkLocalCompleted(this, new IsValidProcessWorkLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidProcess", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidProcess(ref string strProcesso, ref string strObra, out int nProcIDXarq, out int nTotalEspecialidades)
        {
            object[] results = this.Invoke("IsValidProcess", new object[] {
                    strProcesso,
                    strObra});
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nTotalEspecialidades = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidProcess(string strProcesso, string strObra, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidProcess", new object[] {
                    strProcesso,
                    strObra}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidProcess(System.IAsyncResult asyncResult, out string strProcesso, out string strObra, out int nProcIDXarq, out int nTotalEspecialidades)
        {
            object[] results = this.EndInvoke(asyncResult);
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nTotalEspecialidades = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidProcessAsync(string strProcesso, string strObra)
        {
            this.IsValidProcessAsync(strProcesso, strObra, null);
        }

        /// <remarks/>
        public void IsValidProcessAsync(string strProcesso, string strObra, object userState)
        {
            if ((this.IsValidProcessOperationCompleted == null))
            {
                this.IsValidProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidProcessOperationCompleted);
            }
            this.InvokeAsync("IsValidProcess", new object[] {
                    strProcesso,
                    strObra}, this.IsValidProcessOperationCompleted, userState);
        }

        private void OnIsValidProcessOperationCompleted(object arg)
        {
            if ((this.IsValidProcessCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidProcessCompleted(this, new IsValidProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidProcessWork", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidProcessWork(ref string strProcesso, ref string strObra, out int nProcIDXarq, out int nObraIDXarq, out int nTotalEspecialidades)
        {
            object[] results = this.Invoke("IsValidProcessWork", new object[] {
                    strProcesso,
                    strObra});
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nObraIDXarq = ((int)(results[4]));
            nTotalEspecialidades = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidProcessWork(string strProcesso, string strObra, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidProcessWork", new object[] {
                    strProcesso,
                    strObra}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidProcessWork(System.IAsyncResult asyncResult, out string strProcesso, out string strObra, out int nProcIDXarq, out int nObraIDXarq, out int nTotalEspecialidades)
        {
            object[] results = this.EndInvoke(asyncResult);
            strProcesso = ((string)(results[1]));
            strObra = ((string)(results[2]));
            nProcIDXarq = ((int)(results[3]));
            nObraIDXarq = ((int)(results[4]));
            nTotalEspecialidades = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidProcessWorkAsync(string strProcesso, string strObra)
        {
            this.IsValidProcessWorkAsync(strProcesso, strObra, null);
        }

        /// <remarks/>
        public void IsValidProcessWorkAsync(string strProcesso, string strObra, object userState)
        {
            if ((this.IsValidProcessWorkOperationCompleted == null))
            {
                this.IsValidProcessWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidProcessWorkOperationCompleted);
            }
            this.InvokeAsync("IsValidProcessWork", new object[] {
                    strProcesso,
                    strObra}, this.IsValidProcessWorkOperationCompleted, userState);
        }

        private void OnIsValidProcessWorkOperationCompleted(object arg)
        {
            if ((this.IsValidProcessWorkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidProcessWorkCompleted(this, new IsValidProcessWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidDocument(ref string strDocumento, out int nDocIDXarq)
        {
            object[] results = this.Invoke("IsValidDocument", new object[] {
                    strDocumento});
            strDocumento = ((string)(results[1]));
            nDocIDXarq = ((int)(results[2]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidDocument(string strDocumento, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidDocument", new object[] {
                    strDocumento}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidDocument(System.IAsyncResult asyncResult, out string strDocumento, out int nDocIDXarq)
        {
            object[] results = this.EndInvoke(asyncResult);
            strDocumento = ((string)(results[1]));
            nDocIDXarq = ((int)(results[2]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidDocumentAsync(string strDocumento)
        {
            this.IsValidDocumentAsync(strDocumento, null);
        }

        /// <remarks/>
        public void IsValidDocumentAsync(string strDocumento, object userState)
        {
            if ((this.IsValidDocumentOperationCompleted == null))
            {
                this.IsValidDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidDocumentOperationCompleted);
            }
            this.InvokeAsync("IsValidDocument", new object[] {
                    strDocumento}, this.IsValidDocumentOperationCompleted, userState);
        }

        private void OnIsValidDocumentOperationCompleted(object arg)
        {
            if ((this.IsValidDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidDocumentCompleted(this, new IsValidDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFile(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent)
        {
            object[] results = this.Invoke("DigiFile", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFile(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFile", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileAsync(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent)
        {
            this.DigiFileAsync(strObra, strProcesso, nProcIDXarq, strEspecialidade, nEspecialidadeIDXarq, strPagina, bIndice, nUserID, strExtensao, nEscala, nFormato, fileContent, null);
        }

        /// <remarks/>
        public void DigiFileAsync(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent, object userState)
        {
            if ((this.DigiFileOperationCompleted == null))
            {
                this.DigiFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileOperationCompleted);
            }
            this.InvokeAsync("DigiFile", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent}, this.DigiFileOperationCompleted, userState);
        }

        private void OnDigiFileOperationCompleted(object arg)
        {
            if ((this.DigiFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileCompleted(this, new DigiFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileGrid(
                    string strObra,
                    string strProcesso,
                    int nProcIDXarq,
                    string strEspecialidade,
                    int nEspecialidadeIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    int nEscala,
                    int nFormato,
                    int nLegenda,
                    int nLinha,
                    int nColuna,
                    [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent,
                    ImageProperty[] arrayImageProperties)
        {
            object[] results = this.Invoke("DigiFileGrid", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileGrid(
                    string strObra,
                    string strProcesso,
                    int nProcIDXarq,
                    string strEspecialidade,
                    int nEspecialidadeIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    int nEscala,
                    int nFormato,
                    int nLegenda,
                    int nLinha,
                    int nColuna,
                    byte[] fileContent,
                    ImageProperty[] arrayImageProperties,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("DigiFileGrid", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileGrid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileGridAsync(
                    string strObra,
                    string strProcesso,
                    int nProcIDXarq,
                    string strEspecialidade,
                    int nEspecialidadeIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    int nEscala,
                    int nFormato,
                    int nLegenda,
                    int nLinha,
                    int nColuna,
                    byte[] fileContent,
                    ImageProperty[] arrayImageProperties)
        {
            this.DigiFileGridAsync(strObra, strProcesso, nProcIDXarq, strEspecialidade, nEspecialidadeIDXarq, strPagina, bIndice, nUserID, strExtensao, nEscala, nFormato, nLegenda, nLinha, nColuna, fileContent, arrayImageProperties, null);
        }

        /// <remarks/>
        public void DigiFileGridAsync(
                    string strObra,
                    string strProcesso,
                    int nProcIDXarq,
                    string strEspecialidade,
                    int nEspecialidadeIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    int nEscala,
                    int nFormato,
                    int nLegenda,
                    int nLinha,
                    int nColuna,
                    byte[] fileContent,
                    ImageProperty[] arrayImageProperties,
                    object userState)
        {
            if ((this.DigiFileGridOperationCompleted == null))
            {
                this.DigiFileGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileGridOperationCompleted);
            }
            this.InvokeAsync("DigiFileGrid", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties}, this.DigiFileGridOperationCompleted, userState);
        }

        private void OnDigiFileGridOperationCompleted(object arg)
        {
            if ((this.DigiFileGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileGridCompleted(this, new DigiFileGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileDocument(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent)
        {
            object[] results = this.Invoke("DigiFileDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileDocument(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFileDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileDocumentAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent)
        {
            this.DigiFileDocumentAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, strExtensao, nEscala, nFormato, fileContent, null);
        }

        /// <remarks/>
        public void DigiFileDocumentAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, byte[] fileContent, object userState)
        {
            if ((this.DigiFileDocumentOperationCompleted == null))
            {
                this.DigiFileDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileDocumentOperationCompleted);
            }
            this.InvokeAsync("DigiFileDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    fileContent}, this.DigiFileDocumentOperationCompleted, userState);
        }

        private void OnDigiFileDocumentOperationCompleted(object arg)
        {
            if ((this.DigiFileDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileDocumentCompleted(this, new DigiFileDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileDocumentGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileDocumentGrid(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, int nLegenda, int nLinha, int nColuna, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            object[] results = this.Invoke("DigiFileDocumentGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileDocumentGrid(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, int nLegenda, int nLinha, int nColuna, byte[] fileContent, ImageProperty[] arrayImageProperties, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFileDocumentGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileDocumentGrid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileDocumentGridAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, int nLegenda, int nLinha, int nColuna, byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            this.DigiFileDocumentGridAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, strExtensao, nEscala, nFormato, nLegenda, nLinha, nColuna, fileContent, arrayImageProperties, null);
        }

        /// <remarks/>
        public void DigiFileDocumentGridAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nEscala, int nFormato, int nLegenda, int nLinha, int nColuna, byte[] fileContent, ImageProperty[] arrayImageProperties, object userState)
        {
            if ((this.DigiFileDocumentGridOperationCompleted == null))
            {
                this.DigiFileDocumentGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileDocumentGridOperationCompleted);
            }
            this.InvokeAsync("DigiFileDocumentGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nEscala,
                    nFormato,
                    nLegenda,
                    nLinha,
                    nColuna,
                    fileContent,
                    arrayImageProperties}, this.DigiFileDocumentGridOperationCompleted, userState);
        }

        private void OnDigiFileDocumentGridOperationCompleted(object arg)
        {
            if ((this.DigiFileDocumentGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileDocumentGridCompleted(this, new DigiFileDocumentGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileAttachment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileAttachment(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            object[] results = this.Invoke("DigiFileAttachment", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileAttachment(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFileAttachment", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileAttachment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileAttachmentAsync(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            this.DigiFileAttachmentAsync(strObra, strProcesso, nProcIDXarq, strEspecialidade, nEspecialidadeIDXarq, strNome, strDescricao, nUserID, strExtensao, fileContent, arrayImageProperties, null);
        }

        /// <remarks/>
        public void DigiFileAttachmentAsync(string strObra, string strProcesso, int nProcIDXarq, string strEspecialidade, int nEspecialidadeIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties, object userState)
        {
            if ((this.DigiFileAttachmentOperationCompleted == null))
            {
                this.DigiFileAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileAttachmentOperationCompleted);
            }
            this.InvokeAsync("DigiFileAttachment", new object[] {
                    strObra,
                    strProcesso,
                    nProcIDXarq,
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties}, this.DigiFileAttachmentOperationCompleted, userState);
        }

        private void OnDigiFileAttachmentOperationCompleted(object arg)
        {
            if ((this.DigiFileAttachmentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileAttachmentCompleted(this, new DigiFileAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileAttachmentDocumentDivided", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileAttachmentDocumentDivided(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, string strIdentificadorFicheiro, int nPartes, ImageProperty[] arrayImageProperties)
        {
            object[] results = this.Invoke("DigiFileAttachmentDocumentDivided", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    strIdentificadorFicheiro,
                    nPartes,
                    arrayImageProperties});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileAttachmentDocumentDivided(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, string strIdentificadorFicheiro, int nPartes, ImageProperty[] arrayImageProperties, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFileAttachmentDocumentDivided", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    strIdentificadorFicheiro,
                    nPartes,
                    arrayImageProperties}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileAttachmentDocumentDivided(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileAttachmentDocumentDividedAsync(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, string strIdentificadorFicheiro, int nPartes, ImageProperty[] arrayImageProperties)
        {
            this.DigiFileAttachmentDocumentDividedAsync(strDocumento, nDocIDXarq, strNome, strDescricao, nUserID, strExtensao, strIdentificadorFicheiro, nPartes, arrayImageProperties, null);
        }

        /// <remarks/>
        public void DigiFileAttachmentDocumentDividedAsync(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, string strIdentificadorFicheiro, int nPartes, ImageProperty[] arrayImageProperties, object userState)
        {
            if ((this.DigiFileAttachmentDocumentDividedOperationCompleted == null))
            {
                this.DigiFileAttachmentDocumentDividedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileAttachmentDocumentDividedOperationCompleted);
            }
            this.InvokeAsync("DigiFileAttachmentDocumentDivided", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    strIdentificadorFicheiro,
                    nPartes,
                    arrayImageProperties}, this.DigiFileAttachmentDocumentDividedOperationCompleted, userState);
        }

        private void OnDigiFileAttachmentDocumentDividedOperationCompleted(object arg)
        {
            if ((this.DigiFileAttachmentDocumentDividedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileAttachmentDocumentDividedCompleted(this, new DigiFileAttachmentDocumentDividedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigiFileAttachmentDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DigiFileAttachmentDocument(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            object[] results = this.Invoke("DigiFileAttachmentDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDigiFileAttachmentDocument(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DigiFileAttachmentDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDigiFileAttachmentDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DigiFileAttachmentDocumentAsync(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties)
        {
            this.DigiFileAttachmentDocumentAsync(strDocumento, nDocIDXarq, strNome, strDescricao, nUserID, strExtensao, fileContent, arrayImageProperties, null);
        }

        /// <remarks/>
        public void DigiFileAttachmentDocumentAsync(string strDocumento, int nDocIDXarq, string strNome, string strDescricao, int nUserID, string strExtensao, byte[] fileContent, ImageProperty[] arrayImageProperties, object userState)
        {
            if ((this.DigiFileAttachmentDocumentOperationCompleted == null))
            {
                this.DigiFileAttachmentDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigiFileAttachmentDocumentOperationCompleted);
            }
            this.InvokeAsync("DigiFileAttachmentDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strNome,
                    strDescricao,
                    nUserID,
                    strExtensao,
                    fileContent,
                    arrayImageProperties}, this.DigiFileAttachmentDocumentOperationCompleted, userState);
        }

        private void OnDigiFileAttachmentDocumentOperationCompleted(object arg)
        {
            if ((this.DigiFileAttachmentDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigiFileAttachmentDocumentCompleted(this, new DigiFileAttachmentDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachmentInfo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAttachmentInfo(string strNome, int nProcIDXarq, int nEspecialidadeIDXarq, out int nAnexoID, out bool bValidado, out bool bCancelado, out string strDescricao)
        {
            object[] results = this.Invoke("GetAttachmentInfo", new object[] {
                    strNome,
                    nProcIDXarq,
                    nEspecialidadeIDXarq});
            nAnexoID = ((int)(results[1]));
            bValidado = ((bool)(results[2]));
            bCancelado = ((bool)(results[3]));
            strDescricao = ((string)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAttachmentInfo(string strNome, int nProcIDXarq, int nEspecialidadeIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAttachmentInfo", new object[] {
                    strNome,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetAttachmentInfo(System.IAsyncResult asyncResult, out int nAnexoID, out bool bValidado, out bool bCancelado, out string strDescricao)
        {
            object[] results = this.EndInvoke(asyncResult);
            nAnexoID = ((int)(results[1]));
            bValidado = ((bool)(results[2]));
            bCancelado = ((bool)(results[3]));
            strDescricao = ((string)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetAttachmentInfoAsync(string strNome, int nProcIDXarq, int nEspecialidadeIDXarq)
        {
            this.GetAttachmentInfoAsync(strNome, nProcIDXarq, nEspecialidadeIDXarq, null);
        }

        /// <remarks/>
        public void GetAttachmentInfoAsync(string strNome, int nProcIDXarq, int nEspecialidadeIDXarq, object userState)
        {
            if ((this.GetAttachmentInfoOperationCompleted == null))
            {
                this.GetAttachmentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentInfoOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentInfo", new object[] {
                    strNome,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, this.GetAttachmentInfoOperationCompleted, userState);
        }

        private void OnGetAttachmentInfoOperationCompleted(object arg)
        {
            if ((this.GetAttachmentInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentInfoCompleted(this, new GetAttachmentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachmentInfoDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAttachmentInfoDocument(string strNome, int nDocIDXarq, out int nAnexoID, out bool bValidado, out bool bCancelado, out string strDescricao)
        {
            object[] results = this.Invoke("GetAttachmentInfoDocument", new object[] {
                    strNome,
                    nDocIDXarq});
            nAnexoID = ((int)(results[1]));
            bValidado = ((bool)(results[2]));
            bCancelado = ((bool)(results[3]));
            strDescricao = ((string)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAttachmentInfoDocument(string strNome, int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAttachmentInfoDocument", new object[] {
                    strNome,
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetAttachmentInfoDocument(System.IAsyncResult asyncResult, out int nAnexoID, out bool bValidado, out bool bCancelado, out string strDescricao)
        {
            object[] results = this.EndInvoke(asyncResult);
            nAnexoID = ((int)(results[1]));
            bValidado = ((bool)(results[2]));
            bCancelado = ((bool)(results[3]));
            strDescricao = ((string)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetAttachmentInfoDocumentAsync(string strNome, int nDocIDXarq)
        {
            this.GetAttachmentInfoDocumentAsync(strNome, nDocIDXarq, null);
        }

        /// <remarks/>
        public void GetAttachmentInfoDocumentAsync(string strNome, int nDocIDXarq, object userState)
        {
            if ((this.GetAttachmentInfoDocumentOperationCompleted == null))
            {
                this.GetAttachmentInfoDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentInfoDocumentOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentInfoDocument", new object[] {
                    strNome,
                    nDocIDXarq}, this.GetAttachmentInfoDocumentOperationCompleted, userState);
        }

        private void OnGetAttachmentInfoDocumentOperationCompleted(object arg)
        {
            if ((this.GetAttachmentInfoDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentInfoDocumentCompleted(this, new GetAttachmentInfoDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelAttachment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelAttachment(int nAnexoID, int nUserID)
        {
            this.Invoke("CancelAttachment", new object[] {
                    nAnexoID,
                    nUserID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancelAttachment(int nAnexoID, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CancelAttachment", new object[] {
                    nAnexoID,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndCancelAttachment(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void CancelAttachmentAsync(int nAnexoID, int nUserID)
        {
            this.CancelAttachmentAsync(nAnexoID, nUserID, null);
        }

        /// <remarks/>
        public void CancelAttachmentAsync(int nAnexoID, int nUserID, object userState)
        {
            if ((this.CancelAttachmentOperationCompleted == null))
            {
                this.CancelAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelAttachmentOperationCompleted);
            }
            this.InvokeAsync("CancelAttachment", new object[] {
                    nAnexoID,
                    nUserID}, this.CancelAttachmentOperationCompleted, userState);
        }

        private void OnCancelAttachmentOperationCompleted(object arg)
        {
            if ((this.CancelAttachmentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigi", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigi(
                    string strProcesso,
                    string strObra,
                    int nProcIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    int nEspecialidadeIDXarq,
                    string strEspecialidade,
                    out int nProcID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strPathImage,
                    out string strErro,
                    out int nEspecialidadeID,
                    out int nLocalizacaoID)
        {
            object[] results = this.Invoke("BeginDigi", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade});
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nEspecialidadeID = ((int)(results[7]));
            nLocalizacaoID = ((int)(results[8]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigi(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigi", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigi(System.IAsyncResult asyncResult, out int nProcID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nEspecialidadeID, out int nLocalizacaoID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nEspecialidadeID = ((int)(results[7]));
            nLocalizacaoID = ((int)(results[8]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade)
        {
            this.BeginDigiAsync(strProcesso, strObra, nProcIDXarq, strPagina, bIndice, nUserID, nEspecialidadeIDXarq, strEspecialidade, null);
        }

        /// <remarks/>
        public void BeginDigiAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, object userState)
        {
            if ((this.BeginDigiOperationCompleted == null))
            {
                this.BeginDigiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiOperationCompleted);
            }
            this.InvokeAsync("BeginDigi", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade}, this.BeginDigiOperationCompleted, userState);
        }

        private void OnBeginDigiOperationCompleted(object arg)
        {
            if ((this.BeginDigiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiCompleted(this, new BeginDigiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiFileType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiFileType(
                    string strProcesso,
                    string strObra,
                    int nProcIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    int nEspecialidadeIDXarq,
                    string strEspecialidade,
                    string strExtensao,
                    out int nProcID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strPathImage,
                    out string strErro,
                    out int nEspecialidadeID,
                    out int nLocalizacaoID)
        {
            object[] results = this.Invoke("BeginDigiFileType", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao});
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nEspecialidadeID = ((int)(results[7]));
            nLocalizacaoID = ((int)(results[8]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiFileType(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiFileType", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiFileType(System.IAsyncResult asyncResult, out int nProcID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nEspecialidadeID, out int nLocalizacaoID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nEspecialidadeID = ((int)(results[7]));
            nLocalizacaoID = ((int)(results[8]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiFileTypeAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao)
        {
            this.BeginDigiFileTypeAsync(strProcesso, strObra, nProcIDXarq, strPagina, bIndice, nUserID, nEspecialidadeIDXarq, strEspecialidade, strExtensao, null);
        }

        /// <remarks/>
        public void BeginDigiFileTypeAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, object userState)
        {
            if ((this.BeginDigiFileTypeOperationCompleted == null))
            {
                this.BeginDigiFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiFileTypeOperationCompleted);
            }
            this.InvokeAsync("BeginDigiFileType", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao}, this.BeginDigiFileTypeOperationCompleted, userState);
        }

        private void OnBeginDigiFileTypeOperationCompleted(object arg)
        {
            if ((this.BeginDigiFileTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiFileTypeCompleted(this, new BeginDigiFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiFileTypeMultipleServer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiFileTypeMultipleServer(
                    string strProcesso,
                    string strObra,
                    int nProcIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    int nEspecialidadeIDXarq,
                    string strEspecialidade,
                    string strExtensao,
                    out int nProcID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strErro,
                    out int nEspecialidadeID,
                    out string strPathImage,
                    out string strPathImage_T,
                    out string strPathImage_M,
                    out string strPathImage_P,
                    out int nLocalizacaoID,
                    out int nLocalizacaoID_T,
                    out int nLocalizacaoID_M,
                    out int nLocalizacaoID_P)
        {
            object[] results = this.Invoke("BeginDigiFileTypeMultipleServer", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao});
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            nEspecialidadeID = ((int)(results[6]));
            strPathImage = ((string)(results[7]));
            strPathImage_T = ((string)(results[8]));
            strPathImage_M = ((string)(results[9]));
            strPathImage_P = ((string)(results[10]));
            nLocalizacaoID = ((int)(results[11]));
            nLocalizacaoID_T = ((int)(results[12]));
            nLocalizacaoID_M = ((int)(results[13]));
            nLocalizacaoID_P = ((int)(results[14]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiFileTypeMultipleServer(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiFileTypeMultipleServer", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiFileTypeMultipleServer(System.IAsyncResult asyncResult, out int nProcID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strErro, out int nEspecialidadeID, out string strPathImage, out string strPathImage_T, out string strPathImage_M, out string strPathImage_P, out int nLocalizacaoID, out int nLocalizacaoID_T, out int nLocalizacaoID_M, out int nLocalizacaoID_P)
        {
            object[] results = this.EndInvoke(asyncResult);
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            nEspecialidadeID = ((int)(results[6]));
            strPathImage = ((string)(results[7]));
            strPathImage_T = ((string)(results[8]));
            strPathImage_M = ((string)(results[9]));
            strPathImage_P = ((string)(results[10]));
            nLocalizacaoID = ((int)(results[11]));
            nLocalizacaoID_T = ((int)(results[12]));
            nLocalizacaoID_M = ((int)(results[13]));
            nLocalizacaoID_P = ((int)(results[14]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiFileTypeMultipleServerAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao)
        {
            this.BeginDigiFileTypeMultipleServerAsync(strProcesso, strObra, nProcIDXarq, strPagina, bIndice, nUserID, nEspecialidadeIDXarq, strEspecialidade, strExtensao, null);
        }

        /// <remarks/>
        public void BeginDigiFileTypeMultipleServerAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, object userState)
        {
            if ((this.BeginDigiFileTypeMultipleServerOperationCompleted == null))
            {
                this.BeginDigiFileTypeMultipleServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiFileTypeMultipleServerOperationCompleted);
            }
            this.InvokeAsync("BeginDigiFileTypeMultipleServer", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao}, this.BeginDigiFileTypeMultipleServerOperationCompleted, userState);
        }

        private void OnBeginDigiFileTypeMultipleServerOperationCompleted(object arg)
        {
            if ((this.BeginDigiFileTypeMultipleServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiFileTypeMultipleServerCompleted(this, new BeginDigiFileTypeMultipleServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiFileTypeMultipleServerGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiFileTypeMultipleServerGrid(
                    string strProcesso,
                    string strObra,
                    int nProcIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    int nEspecialidadeIDXarq,
                    string strEspecialidade,
                    string strExtensao,
                    int nLinha,
                    int nColuna,
                    out int nProcID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strErro,
                    out int nEspecialidadeID,
                    out string strPathImage,
                    out string strPathImage_T,
                    out string strPathImage_M,
                    out string strPathImage_P,
                    out int nLocalizacaoID,
                    out int nLocalizacaoID_T,
                    out int nLocalizacaoID_M,
                    out int nLocalizacaoID_P)
        {
            object[] results = this.Invoke("BeginDigiFileTypeMultipleServerGrid", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao,
                    nLinha,
                    nColuna});
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            nEspecialidadeID = ((int)(results[6]));
            strPathImage = ((string)(results[7]));
            strPathImage_T = ((string)(results[8]));
            strPathImage_M = ((string)(results[9]));
            strPathImage_P = ((string)(results[10]));
            nLocalizacaoID = ((int)(results[11]));
            nLocalizacaoID_T = ((int)(results[12]));
            nLocalizacaoID_M = ((int)(results[13]));
            nLocalizacaoID_P = ((int)(results[14]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiFileTypeMultipleServerGrid(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiFileTypeMultipleServerGrid", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiFileTypeMultipleServerGrid(System.IAsyncResult asyncResult, out int nProcID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strErro, out int nEspecialidadeID, out string strPathImage, out string strPathImage_T, out string strPathImage_M, out string strPathImage_P, out int nLocalizacaoID, out int nLocalizacaoID_T, out int nLocalizacaoID_M, out int nLocalizacaoID_P)
        {
            object[] results = this.EndInvoke(asyncResult);
            nProcID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            nEspecialidadeID = ((int)(results[6]));
            strPathImage = ((string)(results[7]));
            strPathImage_T = ((string)(results[8]));
            strPathImage_M = ((string)(results[9]));
            strPathImage_P = ((string)(results[10]));
            nLocalizacaoID = ((int)(results[11]));
            nLocalizacaoID_T = ((int)(results[12]));
            nLocalizacaoID_M = ((int)(results[13]));
            nLocalizacaoID_P = ((int)(results[14]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiFileTypeMultipleServerGridAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, int nLinha, int nColuna)
        {
            this.BeginDigiFileTypeMultipleServerGridAsync(strProcesso, strObra, nProcIDXarq, strPagina, bIndice, nUserID, nEspecialidadeIDXarq, strEspecialidade, strExtensao, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void BeginDigiFileTypeMultipleServerGridAsync(string strProcesso, string strObra, int nProcIDXarq, string strPagina, bool bIndice, int nUserID, int nEspecialidadeIDXarq, string strEspecialidade, string strExtensao, int nLinha, int nColuna, object userState)
        {
            if ((this.BeginDigiFileTypeMultipleServerGridOperationCompleted == null))
            {
                this.BeginDigiFileTypeMultipleServerGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiFileTypeMultipleServerGridOperationCompleted);
            }
            this.InvokeAsync("BeginDigiFileTypeMultipleServerGrid", new object[] {
                    strProcesso,
                    strObra,
                    nProcIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeIDXarq,
                    strEspecialidade,
                    strExtensao,
                    nLinha,
                    nColuna}, this.BeginDigiFileTypeMultipleServerGridOperationCompleted, userState);
        }

        private void OnBeginDigiFileTypeMultipleServerGridOperationCompleted(object arg)
        {
            if ((this.BeginDigiFileTypeMultipleServerGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiFileTypeMultipleServerGridCompleted(this, new BeginDigiFileTypeMultipleServerGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigi", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigi(int nProcID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID)
        {
            object[] results = this.Invoke("FinishDigi", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigi(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigi", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigi(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID)
        {
            this.FinishDigiAsync(nProcID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nEspecialidadeID, nLocalizacaoID, null);
        }

        /// <remarks/>
        public void FinishDigiAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, object userState)
        {
            if ((this.FinishDigiOperationCompleted == null))
            {
                this.FinishDigiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiOperationCompleted);
            }
            this.InvokeAsync("FinishDigi", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID}, this.FinishDigiOperationCompleted, userState);
        }

        private void OnFinishDigiOperationCompleted(object arg)
        {
            if ((this.FinishDigiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiCompleted(this, new FinishDigiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiFileType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiFileType(int nProcID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, string strExtensao)
        {
            object[] results = this.Invoke("FinishDigiFileType", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    strExtensao});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiFileType(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiFileType", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiFileType(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiFileTypeAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, string strExtensao)
        {
            this.FinishDigiFileTypeAsync(nProcID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nEspecialidadeID, nLocalizacaoID, strExtensao, null);
        }

        /// <remarks/>
        public void FinishDigiFileTypeAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, string strExtensao, object userState)
        {
            if ((this.FinishDigiFileTypeOperationCompleted == null))
            {
                this.FinishDigiFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiFileTypeOperationCompleted);
            }
            this.InvokeAsync("FinishDigiFileType", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    strExtensao}, this.FinishDigiFileTypeOperationCompleted, userState);
        }

        private void OnFinishDigiFileTypeOperationCompleted(object arg)
        {
            if ((this.FinishDigiFileTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiFileTypeCompleted(this, new FinishDigiFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiFileTypeMultipleServer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiFileTypeMultipleServer(int nProcID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao)
        {
            object[] results = this.Invoke("FinishDigiFileTypeMultipleServer", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiFileTypeMultipleServer(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiFileTypeMultipleServer", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiFileTypeMultipleServer(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiFileTypeMultipleServerAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao)
        {
            this.FinishDigiFileTypeMultipleServerAsync(nProcID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nEspecialidadeID, nLocalizacaoID, nLocalizacaoID_T, nLocalizacaoID_M, nLocalizacaoID_P, strExtensao, null);
        }

        /// <remarks/>
        public void FinishDigiFileTypeMultipleServerAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, object userState)
        {
            if ((this.FinishDigiFileTypeMultipleServerOperationCompleted == null))
            {
                this.FinishDigiFileTypeMultipleServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiFileTypeMultipleServerOperationCompleted);
            }
            this.InvokeAsync("FinishDigiFileTypeMultipleServer", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao}, this.FinishDigiFileTypeMultipleServerOperationCompleted, userState);
        }

        private void OnFinishDigiFileTypeMultipleServerOperationCompleted(object arg)
        {
            if ((this.FinishDigiFileTypeMultipleServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiFileTypeMultipleServerCompleted(this, new FinishDigiFileTypeMultipleServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiFileTypeMultipleServerGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiFileTypeMultipleServerGrid(int nProcID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna)
        {
            object[] results = this.Invoke("FinishDigiFileTypeMultipleServerGrid", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiFileTypeMultipleServerGrid(
                    int nProcID,
                    int nImagemID,
                    string strNomeImagem,
                    string strNomePagina,
                    bool bIndice,
                    int nUserID,
                    int nEspecialidadeID,
                    int nLocalizacaoID,
                    int nLocalizacaoID_T,
                    int nLocalizacaoID_M,
                    int nLocalizacaoID_P,
                    string strExtensao,
                    int nLinha,
                    int nColuna,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("FinishDigiFileTypeMultipleServerGrid", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiFileTypeMultipleServerGrid(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiFileTypeMultipleServerGridAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna)
        {
            this.FinishDigiFileTypeMultipleServerGridAsync(nProcID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nEspecialidadeID, nLocalizacaoID, nLocalizacaoID_T, nLocalizacaoID_M, nLocalizacaoID_P, strExtensao, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void FinishDigiFileTypeMultipleServerGridAsync(int nProcID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nEspecialidadeID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna, object userState)
        {
            if ((this.FinishDigiFileTypeMultipleServerGridOperationCompleted == null))
            {
                this.FinishDigiFileTypeMultipleServerGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiFileTypeMultipleServerGridOperationCompleted);
            }
            this.InvokeAsync("FinishDigiFileTypeMultipleServerGrid", new object[] {
                    nProcID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nEspecialidadeID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna}, this.FinishDigiFileTypeMultipleServerGridOperationCompleted, userState);
        }

        private void OnFinishDigiFileTypeMultipleServerGridOperationCompleted(object arg)
        {
            if ((this.FinishDigiFileTypeMultipleServerGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiFileTypeMultipleServerGridCompleted(this, new FinishDigiFileTypeMultipleServerGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiDocument(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nLocalizacaoID)
        {
            object[] results = this.Invoke("BeginDigiDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID});
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nLocalizacaoID = ((int)(results[7]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiDocument(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiDocument(System.IAsyncResult asyncResult, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nLocalizacaoID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nLocalizacaoID = ((int)(results[7]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiDocumentAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID)
        {
            this.BeginDigiDocumentAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, null);
        }

        /// <remarks/>
        public void BeginDigiDocumentAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, object userState)
        {
            if ((this.BeginDigiDocumentOperationCompleted == null))
            {
                this.BeginDigiDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiDocumentOperationCompleted);
            }
            this.InvokeAsync("BeginDigiDocument", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID}, this.BeginDigiDocumentOperationCompleted, userState);
        }

        private void OnBeginDigiDocumentOperationCompleted(object arg)
        {
            if ((this.BeginDigiDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiDocumentCompleted(this, new BeginDigiDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiDocumentFileType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiDocumentFileType(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nLocalizacaoID)
        {
            object[] results = this.Invoke("BeginDigiDocumentFileType", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao});
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nLocalizacaoID = ((int)(results[7]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiDocumentFileType(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiDocumentFileType", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiDocumentFileType(System.IAsyncResult asyncResult, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strPathImage, out string strErro, out int nLocalizacaoID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strPathImage = ((string)(results[5]));
            strErro = ((string)(results[6]));
            nLocalizacaoID = ((int)(results[7]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao)
        {
            this.BeginDigiDocumentFileTypeAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, strExtensao, null);
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, object userState)
        {
            if ((this.BeginDigiDocumentFileTypeOperationCompleted == null))
            {
                this.BeginDigiDocumentFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiDocumentFileTypeOperationCompleted);
            }
            this.InvokeAsync("BeginDigiDocumentFileType", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao}, this.BeginDigiDocumentFileTypeOperationCompleted, userState);
        }

        private void OnBeginDigiDocumentFileTypeOperationCompleted(object arg)
        {
            if ((this.BeginDigiDocumentFileTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiDocumentFileTypeCompleted(this, new BeginDigiDocumentFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiDocumentFileTypeMultipleServer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiDocumentFileTypeMultipleServer(
                    string strDocumento,
                    int nDocIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    out int nDocID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strErro,
                    out string strPathImage,
                    out string strPathImage_T,
                    out string strPathImage_M,
                    out string strPathImage_P,
                    out int nLocalizacaoID,
                    out int nLocalizacaoID_T,
                    out int nLocalizacaoID_M,
                    out int nLocalizacaoID_P)
        {
            object[] results = this.Invoke("BeginDigiDocumentFileTypeMultipleServer", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao});
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            strPathImage = ((string)(results[6]));
            strPathImage_T = ((string)(results[7]));
            strPathImage_M = ((string)(results[8]));
            strPathImage_P = ((string)(results[9]));
            nLocalizacaoID = ((int)(results[10]));
            nLocalizacaoID_T = ((int)(results[11]));
            nLocalizacaoID_M = ((int)(results[12]));
            nLocalizacaoID_P = ((int)(results[13]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiDocumentFileTypeMultipleServer(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiDocumentFileTypeMultipleServer", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiDocumentFileTypeMultipleServer(System.IAsyncResult asyncResult, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strErro, out string strPathImage, out string strPathImage_T, out string strPathImage_M, out string strPathImage_P, out int nLocalizacaoID, out int nLocalizacaoID_T, out int nLocalizacaoID_M, out int nLocalizacaoID_P)
        {
            object[] results = this.EndInvoke(asyncResult);
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            strPathImage = ((string)(results[6]));
            strPathImage_T = ((string)(results[7]));
            strPathImage_M = ((string)(results[8]));
            strPathImage_P = ((string)(results[9]));
            nLocalizacaoID = ((int)(results[10]));
            nLocalizacaoID_T = ((int)(results[11]));
            nLocalizacaoID_M = ((int)(results[12]));
            nLocalizacaoID_P = ((int)(results[13]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeMultipleServerAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao)
        {
            this.BeginDigiDocumentFileTypeMultipleServerAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, strExtensao, null);
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeMultipleServerAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, object userState)
        {
            if ((this.BeginDigiDocumentFileTypeMultipleServerOperationCompleted == null))
            {
                this.BeginDigiDocumentFileTypeMultipleServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiDocumentFileTypeMultipleServerOperationCompleted);
            }
            this.InvokeAsync("BeginDigiDocumentFileTypeMultipleServer", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao}, this.BeginDigiDocumentFileTypeMultipleServerOperationCompleted, userState);
        }

        private void OnBeginDigiDocumentFileTypeMultipleServerOperationCompleted(object arg)
        {
            if ((this.BeginDigiDocumentFileTypeMultipleServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiDocumentFileTypeMultipleServerCompleted(this, new BeginDigiDocumentFileTypeMultipleServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeginDigiDocumentFileTypeMultipleServerGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BeginDigiDocumentFileTypeMultipleServerGrid(
                    string strDocumento,
                    int nDocIDXarq,
                    string strPagina,
                    bool bIndice,
                    int nUserID,
                    string strExtensao,
                    int nLinha,
                    int nColuna,
                    out int nDocID,
                    out int nImagemID,
                    out string strNomeImagem,
                    out string strNomePagina,
                    out string strErro,
                    out string strPathImage,
                    out string strPathImage_T,
                    out string strPathImage_M,
                    out string strPathImage_P,
                    out int nLocalizacaoID,
                    out int nLocalizacaoID_T,
                    out int nLocalizacaoID_M,
                    out int nLocalizacaoID_P)
        {
            object[] results = this.Invoke("BeginDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nLinha,
                    nColuna});
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            strPathImage = ((string)(results[6]));
            strPathImage_T = ((string)(results[7]));
            strPathImage_M = ((string)(results[8]));
            strPathImage_P = ((string)(results[9]));
            nLocalizacaoID = ((int)(results[10]));
            nLocalizacaoID_T = ((int)(results[11]));
            nLocalizacaoID_M = ((int)(results[12]));
            nLocalizacaoID_P = ((int)(results[13]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBeginDigiDocumentFileTypeMultipleServerGrid(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BeginDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndBeginDigiDocumentFileTypeMultipleServerGrid(System.IAsyncResult asyncResult, out int nDocID, out int nImagemID, out string strNomeImagem, out string strNomePagina, out string strErro, out string strPathImage, out string strPathImage_T, out string strPathImage_M, out string strPathImage_P, out int nLocalizacaoID, out int nLocalizacaoID_T, out int nLocalizacaoID_M, out int nLocalizacaoID_P)
        {
            object[] results = this.EndInvoke(asyncResult);
            nDocID = ((int)(results[1]));
            nImagemID = ((int)(results[2]));
            strNomeImagem = ((string)(results[3]));
            strNomePagina = ((string)(results[4]));
            strErro = ((string)(results[5]));
            strPathImage = ((string)(results[6]));
            strPathImage_T = ((string)(results[7]));
            strPathImage_M = ((string)(results[8]));
            strPathImage_P = ((string)(results[9]));
            nLocalizacaoID = ((int)(results[10]));
            nLocalizacaoID_T = ((int)(results[11]));
            nLocalizacaoID_M = ((int)(results[12]));
            nLocalizacaoID_P = ((int)(results[13]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeMultipleServerGridAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nLinha, int nColuna)
        {
            this.BeginDigiDocumentFileTypeMultipleServerGridAsync(strDocumento, nDocIDXarq, strPagina, bIndice, nUserID, strExtensao, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void BeginDigiDocumentFileTypeMultipleServerGridAsync(string strDocumento, int nDocIDXarq, string strPagina, bool bIndice, int nUserID, string strExtensao, int nLinha, int nColuna, object userState)
        {
            if ((this.BeginDigiDocumentFileTypeMultipleServerGridOperationCompleted == null))
            {
                this.BeginDigiDocumentFileTypeMultipleServerGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDigiDocumentFileTypeMultipleServerGridOperationCompleted);
            }
            this.InvokeAsync("BeginDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    strPagina,
                    bIndice,
                    nUserID,
                    strExtensao,
                    nLinha,
                    nColuna}, this.BeginDigiDocumentFileTypeMultipleServerGridOperationCompleted, userState);
        }

        private void OnBeginDigiDocumentFileTypeMultipleServerGridOperationCompleted(object arg)
        {
            if ((this.BeginDigiDocumentFileTypeMultipleServerGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDigiDocumentFileTypeMultipleServerGridCompleted(this, new BeginDigiDocumentFileTypeMultipleServerGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiDocument(int nDocID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID)
        {
            object[] results = this.Invoke("FinishDigiDocument", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiDocument(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiDocument", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiDocument(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiDocumentAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID)
        {
            this.FinishDigiDocumentAsync(nDocID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nLocalizacaoID, null);
        }

        /// <remarks/>
        public void FinishDigiDocumentAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, object userState)
        {
            if ((this.FinishDigiDocumentOperationCompleted == null))
            {
                this.FinishDigiDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiDocumentOperationCompleted);
            }
            this.InvokeAsync("FinishDigiDocument", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID}, this.FinishDigiDocumentOperationCompleted, userState);
        }

        private void OnFinishDigiDocumentOperationCompleted(object arg)
        {
            if ((this.FinishDigiDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiDocumentCompleted(this, new FinishDigiDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiDocumentFileType", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiDocumentFileType(int nDocID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, string strExtensao)
        {
            object[] results = this.Invoke("FinishDigiDocumentFileType", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    strExtensao});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiDocumentFileType(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiDocumentFileType", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiDocumentFileType(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, string strExtensao)
        {
            this.FinishDigiDocumentFileTypeAsync(nDocID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nLocalizacaoID, strExtensao, null);
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, string strExtensao, object userState)
        {
            if ((this.FinishDigiDocumentFileTypeOperationCompleted == null))
            {
                this.FinishDigiDocumentFileTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiDocumentFileTypeOperationCompleted);
            }
            this.InvokeAsync("FinishDigiDocumentFileType", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    strExtensao}, this.FinishDigiDocumentFileTypeOperationCompleted, userState);
        }

        private void OnFinishDigiDocumentFileTypeOperationCompleted(object arg)
        {
            if ((this.FinishDigiDocumentFileTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiDocumentFileTypeCompleted(this, new FinishDigiDocumentFileTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiDocumentFileTypeMultipleServer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiDocumentFileTypeMultipleServer(int nDocID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao)
        {
            object[] results = this.Invoke("FinishDigiDocumentFileTypeMultipleServer", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiDocumentFileTypeMultipleServer(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiDocumentFileTypeMultipleServer", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiDocumentFileTypeMultipleServer(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeMultipleServerAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao)
        {
            this.FinishDigiDocumentFileTypeMultipleServerAsync(nDocID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nLocalizacaoID, nLocalizacaoID_T, nLocalizacaoID_M, nLocalizacaoID_P, strExtensao, null);
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeMultipleServerAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, object userState)
        {
            if ((this.FinishDigiDocumentFileTypeMultipleServerOperationCompleted == null))
            {
                this.FinishDigiDocumentFileTypeMultipleServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiDocumentFileTypeMultipleServerOperationCompleted);
            }
            this.InvokeAsync("FinishDigiDocumentFileTypeMultipleServer", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao}, this.FinishDigiDocumentFileTypeMultipleServerOperationCompleted, userState);
        }

        private void OnFinishDigiDocumentFileTypeMultipleServerOperationCompleted(object arg)
        {
            if ((this.FinishDigiDocumentFileTypeMultipleServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiDocumentFileTypeMultipleServerCompleted(this, new FinishDigiDocumentFileTypeMultipleServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishDigiDocumentFileTypeMultipleServerGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinishDigiDocumentFileTypeMultipleServerGrid(int nDocID, ref int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna)
        {
            object[] results = this.Invoke("FinishDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna});
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginFinishDigiDocumentFileTypeMultipleServerGrid(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("FinishDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public void EndFinishDigiDocumentFileTypeMultipleServerGrid(System.IAsyncResult asyncResult, out int nImagemID)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[0]));
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeMultipleServerGridAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna)
        {
            this.FinishDigiDocumentFileTypeMultipleServerGridAsync(nDocID, nImagemID, strNomeImagem, strNomePagina, bIndice, nUserID, nLocalizacaoID, nLocalizacaoID_T, nLocalizacaoID_M, nLocalizacaoID_P, strExtensao, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void FinishDigiDocumentFileTypeMultipleServerGridAsync(int nDocID, int nImagemID, string strNomeImagem, string strNomePagina, bool bIndice, int nUserID, int nLocalizacaoID, int nLocalizacaoID_T, int nLocalizacaoID_M, int nLocalizacaoID_P, string strExtensao, int nLinha, int nColuna, object userState)
        {
            if ((this.FinishDigiDocumentFileTypeMultipleServerGridOperationCompleted == null))
            {
                this.FinishDigiDocumentFileTypeMultipleServerGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishDigiDocumentFileTypeMultipleServerGridOperationCompleted);
            }
            this.InvokeAsync("FinishDigiDocumentFileTypeMultipleServerGrid", new object[] {
                    nDocID,
                    nImagemID,
                    strNomeImagem,
                    strNomePagina,
                    bIndice,
                    nUserID,
                    nLocalizacaoID,
                    nLocalizacaoID_T,
                    nLocalizacaoID_M,
                    nLocalizacaoID_P,
                    strExtensao,
                    nLinha,
                    nColuna}, this.FinishDigiDocumentFileTypeMultipleServerGridOperationCompleted, userState);
        }

        private void OnFinishDigiDocumentFileTypeMultipleServerGridOperationCompleted(object arg)
        {
            if ((this.FinishDigiDocumentFileTypeMultipleServerGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishDigiDocumentFileTypeMultipleServerGridCompleted(this, new FinishDigiDocumentFileTypeMultipleServerGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateImage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateImage(int nImagemID, int nUserID)
        {
            this.Invoke("ValidateImage", new object[] {
                    nImagemID,
                    nUserID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidateImage(int nImagemID, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidateImage", new object[] {
                    nImagemID,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndValidateImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ValidateImageAsync(int nImagemID, int nUserID)
        {
            this.ValidateImageAsync(nImagemID, nUserID, null);
        }

        /// <remarks/>
        public void ValidateImageAsync(int nImagemID, int nUserID, object userState)
        {
            if ((this.ValidateImageOperationCompleted == null))
            {
                this.ValidateImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateImageOperationCompleted);
            }
            this.InvokeAsync("ValidateImage", new object[] {
                    nImagemID,
                    nUserID}, this.ValidateImageOperationCompleted, userState);
        }

        private void OnValidateImageOperationCompleted(object arg)
        {
            if ((this.ValidateImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelImage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelImage(int nImagemID, int nUserID)
        {
            this.Invoke("CancelImage", new object[] {
                    nImagemID,
                    nUserID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancelImage(int nImagemID, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CancelImage", new object[] {
                    nImagemID,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndCancelImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void CancelImageAsync(int nImagemID, int nUserID)
        {
            this.CancelImageAsync(nImagemID, nUserID, null);
        }

        /// <remarks/>
        public void CancelImageAsync(int nImagemID, int nUserID, object userState)
        {
            if ((this.CancelImageOperationCompleted == null))
            {
                this.CancelImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelImageOperationCompleted);
            }
            this.InvokeAsync("CancelImage", new object[] {
                    nImagemID,
                    nUserID}, this.CancelImageOperationCompleted, userState);
        }

        private void OnCancelImageOperationCompleted(object arg)
        {
            if ((this.CancelImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintImage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PrintImage(int nImagemID, int nUserID)
        {
            this.Invoke("PrintImage", new object[] {
                    nImagemID,
                    nUserID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginPrintImage(int nImagemID, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PrintImage", new object[] {
                    nImagemID,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndPrintImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void PrintImageAsync(int nImagemID, int nUserID)
        {
            this.PrintImageAsync(nImagemID, nUserID, null);
        }

        /// <remarks/>
        public void PrintImageAsync(int nImagemID, int nUserID, object userState)
        {
            if ((this.PrintImageOperationCompleted == null))
            {
                this.PrintImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintImageOperationCompleted);
            }
            this.InvokeAsync("PrintImage", new object[] {
                    nImagemID,
                    nUserID}, this.PrintImageOperationCompleted, userState);
        }

        private void OnPrintImageOperationCompleted(object arg)
        {
            if ((this.PrintImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImage(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato)
        {
            object[] results = this.Invoke("GetImage", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq});
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImage(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImage", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImage(System.IAsyncResult asyncResult, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato)
        {
            object[] results = this.EndInvoke(asyncResult);
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq)
        {
            this.GetImageAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, null);
        }

        /// <remarks/>
        public void GetImageAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, object userState)
        {
            if ((this.GetImageOperationCompleted == null))
            {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, this.GetImageOperationCompleted, userState);
        }

        private void OnGetImageOperationCompleted(object arg)
        {
            if ((this.GetImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nLinha, int nColuna, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.Invoke("GetImageGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nLinha,
                    nColuna});
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            nLegenda = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageGrid(System.IAsyncResult asyncResult, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.EndInvoke(asyncResult);
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            nLegenda = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nLinha, int nColuna)
        {
            this.GetImageGridAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void GetImageGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nLinha, int nColuna, object userState)
        {
            if ((this.GetImageGridOperationCompleted == null))
            {
                this.GetImageGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageGridOperationCompleted);
            }
            this.InvokeAsync("GetImageGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nLinha,
                    nColuna}, this.GetImageGridOperationCompleted, userState);
        }

        private void OnGetImageGridOperationCompleted(object arg)
        {
            if ((this.GetImageGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageGridCompleted(this, new GetImageGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageInfo", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageInfo(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.Invoke("GetImageInfo", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq});
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageInfo(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageInfo", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageInfo(System.IAsyncResult asyncResult, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageInfoAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq)
        {
            this.GetImageInfoAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, null);
        }

        /// <remarks/>
        public void GetImageInfoAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, object userState)
        {
            if ((this.GetImageInfoOperationCompleted == null))
            {
                this.GetImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageInfoOperationCompleted);
            }
            this.InvokeAsync("GetImageInfo", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, this.GetImageInfoOperationCompleted, userState);
        }

        private void OnGetImageInfoOperationCompleted(object arg)
        {
            if ((this.GetImageInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageInfoCompleted(this, new GetImageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageInfoGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageInfoGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda, out int nLinhas, out int nColunas)
        {
            object[] results = this.Invoke("GetImageInfoGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq});
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            nLinhas = ((int)(results[5]));
            nColunas = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageInfoGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageInfoGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageInfoGrid(System.IAsyncResult asyncResult, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda, out int nLinhas, out int nColunas)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            nLinhas = ((int)(results[5]));
            nColunas = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageInfoGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq)
        {
            this.GetImageInfoGridAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, null);
        }

        /// <remarks/>
        public void GetImageInfoGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, object userState)
        {
            if ((this.GetImageInfoGridOperationCompleted == null))
            {
                this.GetImageInfoGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageInfoGridOperationCompleted);
            }
            this.InvokeAsync("GetImageInfoGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq}, this.GetImageInfoGridOperationCompleted, userState);
        }

        private void OnGetImageInfoGridOperationCompleted(object arg)
        {
            if ((this.GetImageInfoGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageInfoGridCompleted(this, new GetImageInfoGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFilePart", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendFilePart(string strIdentificadorFicheiro, int nParte, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] filePart)
        {
            object[] results = this.Invoke("SendFilePart", new object[] {
                    strIdentificadorFicheiro,
                    nParte,
                    filePart});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendFilePart(string strIdentificadorFicheiro, int nParte, byte[] filePart, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendFilePart", new object[] {
                    strIdentificadorFicheiro,
                    nParte,
                    filePart}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSendFilePart(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SendFilePartAsync(string strIdentificadorFicheiro, int nParte, byte[] filePart)
        {
            this.SendFilePartAsync(strIdentificadorFicheiro, nParte, filePart, null);
        }

        /// <remarks/>
        public void SendFilePartAsync(string strIdentificadorFicheiro, int nParte, byte[] filePart, object userState)
        {
            if ((this.SendFilePartOperationCompleted == null))
            {
                this.SendFilePartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFilePartOperationCompleted);
            }
            this.InvokeAsync("SendFilePart", new object[] {
                    strIdentificadorFicheiro,
                    nParte,
                    filePart}, this.SendFilePartOperationCompleted, userState);
        }

        private void OnSendFilePartOperationCompleted(object arg)
        {
            if ((this.SendFilePartCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFilePartCompleted(this, new SendFilePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFile(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho)
        {
            object[] results = this.Invoke("GetFile", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFile(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFile", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho)
        {
            this.GetFileAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, nTamanho, null);
        }

        /// <remarks/>
        public void GetFileAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, object userState)
        {
            if ((this.GetFileOperationCompleted == null))
            {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho}, this.GetFileOperationCompleted, userState);
        }

        private void OnGetFileOperationCompleted(object arg)
        {
            if ((this.GetFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, int nLinha, int nColuna)
        {
            object[] results = this.Invoke("GetFileGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileGrid(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileGrid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, int nLinha, int nColuna)
        {
            this.GetFileGridAsync(strPagina, bIndice, nProcIDXarq, nEspecialidadeIDXarq, nTamanho, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void GetFileGridAsync(string strPagina, bool bIndice, int nProcIDXarq, int nEspecialidadeIDXarq, int nTamanho, int nLinha, int nColuna, object userState)
        {
            if ((this.GetFileGridOperationCompleted == null))
            {
                this.GetFileGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileGridOperationCompleted);
            }
            this.InvokeAsync("GetFileGrid", new object[] {
                    strPagina,
                    bIndice,
                    nProcIDXarq,
                    nEspecialidadeIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna}, this.GetFileGridOperationCompleted, userState);
        }

        private void OnGetFileGridOperationCompleted(object arg)
        {
            if ((this.GetFileGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileGridCompleted(this, new GetFileGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePageID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFilePageID(int nPaginaID, int nLinha, int nColuna, int nTamanho, TipoDocumentoDigital tipoDocumentoDigital)
        {
            object[] results = this.Invoke("GetFilePageID", new object[] {
                    nPaginaID,
                    nLinha,
                    nColuna,
                    nTamanho,
                    tipoDocumentoDigital});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFilePageID(int nPaginaID, int nLinha, int nColuna, int nTamanho, TipoDocumentoDigital tipoDocumentoDigital, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFilePageID", new object[] {
                    nPaginaID,
                    nLinha,
                    nColuna,
                    nTamanho,
                    tipoDocumentoDigital}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFilePageID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFilePageIDAsync(int nPaginaID, int nLinha, int nColuna, int nTamanho, TipoDocumentoDigital tipoDocumentoDigital)
        {
            this.GetFilePageIDAsync(nPaginaID, nLinha, nColuna, nTamanho, tipoDocumentoDigital, null);
        }

        /// <remarks/>
        public void GetFilePageIDAsync(int nPaginaID, int nLinha, int nColuna, int nTamanho, TipoDocumentoDigital tipoDocumentoDigital, object userState)
        {
            if ((this.GetFilePageIDOperationCompleted == null))
            {
                this.GetFilePageIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePageIDOperationCompleted);
            }
            this.InvokeAsync("GetFilePageID", new object[] {
                    nPaginaID,
                    nLinha,
                    nColuna,
                    nTamanho,
                    tipoDocumentoDigital}, this.GetFilePageIDOperationCompleted, userState);
        }

        private void OnGetFilePageIDOperationCompleted(object arg)
        {
            if ((this.GetFilePageIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePageIDCompleted(this, new GetFilePageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileAttachmentID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileAttachmentID(int nAnexoID, TipoDocumentoDigital tipoDocumentoDigital)
        {
            object[] results = this.Invoke("GetFileAttachmentID", new object[] {
                    nAnexoID,
                    tipoDocumentoDigital});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileAttachmentID(int nAnexoID, TipoDocumentoDigital tipoDocumentoDigital, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileAttachmentID", new object[] {
                    nAnexoID,
                    tipoDocumentoDigital}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileAttachmentID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileAttachmentIDAsync(int nAnexoID, TipoDocumentoDigital tipoDocumentoDigital)
        {
            this.GetFileAttachmentIDAsync(nAnexoID, tipoDocumentoDigital, null);
        }

        /// <remarks/>
        public void GetFileAttachmentIDAsync(int nAnexoID, TipoDocumentoDigital tipoDocumentoDigital, object userState)
        {
            if ((this.GetFileAttachmentIDOperationCompleted == null))
            {
                this.GetFileAttachmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileAttachmentIDOperationCompleted);
            }
            this.InvokeAsync("GetFileAttachmentID", new object[] {
                    nAnexoID,
                    tipoDocumentoDigital}, this.GetFileAttachmentIDOperationCompleted, userState);
        }

        private void OnGetFileAttachmentIDOperationCompleted(object arg)
        {
            if ((this.GetFileAttachmentIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileAttachmentIDCompleted(this, new GetFileAttachmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileFromID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileFromID(int nFicheiroID)
        {
            object[] results = this.Invoke("GetFileFromID", new object[] {
                    nFicheiroID});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileFromID(int nFicheiroID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileFromID", new object[] {
                    nFicheiroID}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileFromID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileFromIDAsync(int nFicheiroID)
        {
            this.GetFileFromIDAsync(nFicheiroID, null);
        }

        /// <remarks/>
        public void GetFileFromIDAsync(int nFicheiroID, object userState)
        {
            if ((this.GetFileFromIDOperationCompleted == null))
            {
                this.GetFileFromIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileFromIDOperationCompleted);
            }
            this.InvokeAsync("GetFileFromID", new object[] {
                    nFicheiroID}, this.GetFileFromIDOperationCompleted, userState);
        }

        private void OnGetFileFromIDOperationCompleted(object arg)
        {
            if ((this.GetFileFromIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileFromIDCompleted(this, new GetFileFromIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageDocument(string strPagina, bool bIndice, int nDocIDXarq, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato)
        {
            object[] results = this.Invoke("GetImageDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq});
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageDocument(string strPagina, bool bIndice, int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageDocument(System.IAsyncResult asyncResult, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato)
        {
            object[] results = this.EndInvoke(asyncResult);
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq)
        {
            this.GetImageDocumentAsync(strPagina, bIndice, nDocIDXarq, null);
        }

        /// <remarks/>
        public void GetImageDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq, object userState)
        {
            if ((this.GetImageDocumentOperationCompleted == null))
            {
                this.GetImageDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageDocumentOperationCompleted);
            }
            this.InvokeAsync("GetImageDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, this.GetImageDocumentOperationCompleted, userState);
        }

        private void OnGetImageDocumentOperationCompleted(object arg)
        {
            if ((this.GetImageDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageDocumentCompleted(this, new GetImageDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageDocumentGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, int nLinha, int nColuna, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.Invoke("GetImageDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nLinha,
                    nColuna});
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            nLegenda = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageDocumentGrid(System.IAsyncResult asyncResult, out bool bValidada, out string strPathImage, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.EndInvoke(asyncResult);
            bValidada = ((bool)(results[1]));
            strPathImage = ((string)(results[2]));
            nImagemID = ((int)(results[3]));
            nEscala = ((int)(results[4]));
            nFormato = ((int)(results[5]));
            nLegenda = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq, int nLinha, int nColuna)
        {
            this.GetImageDocumentGridAsync(strPagina, bIndice, nDocIDXarq, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void GetImageDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq, int nLinha, int nColuna, object userState)
        {
            if ((this.GetImageDocumentGridOperationCompleted == null))
            {
                this.GetImageDocumentGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageDocumentGridOperationCompleted);
            }
            this.InvokeAsync("GetImageDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nLinha,
                    nColuna}, this.GetImageDocumentGridOperationCompleted, userState);
        }

        private void OnGetImageDocumentGridOperationCompleted(object arg)
        {
            if ((this.GetImageDocumentGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageDocumentGridCompleted(this, new GetImageDocumentGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageInfoDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageInfoDocument(string strPagina, bool bIndice, int nDocIDXarq, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.Invoke("GetImageInfoDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq});
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageInfoDocument(string strPagina, bool bIndice, int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageInfoDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageInfoDocument(System.IAsyncResult asyncResult, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageInfoDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq)
        {
            this.GetImageInfoDocumentAsync(strPagina, bIndice, nDocIDXarq, null);
        }

        /// <remarks/>
        public void GetImageInfoDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq, object userState)
        {
            if ((this.GetImageInfoDocumentOperationCompleted == null))
            {
                this.GetImageInfoDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageInfoDocumentOperationCompleted);
            }
            this.InvokeAsync("GetImageInfoDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, this.GetImageInfoDocumentOperationCompleted, userState);
        }

        private void OnGetImageInfoDocumentOperationCompleted(object arg)
        {
            if ((this.GetImageInfoDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageInfoDocumentCompleted(this, new GetImageInfoDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageInfoDocumentGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetImageInfoDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda, out int nLinhas, out int nColunas)
        {
            object[] results = this.Invoke("GetImageInfoDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq});
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            nLinhas = ((int)(results[5]));
            nColunas = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetImageInfoDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetImageInfoDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetImageInfoDocumentGrid(System.IAsyncResult asyncResult, out int nImagemID, out int nEscala, out int nFormato, out int nLegenda, out int nLinhas, out int nColunas)
        {
            object[] results = this.EndInvoke(asyncResult);
            nImagemID = ((int)(results[1]));
            nEscala = ((int)(results[2]));
            nFormato = ((int)(results[3]));
            nLegenda = ((int)(results[4]));
            nLinhas = ((int)(results[5]));
            nColunas = ((int)(results[6]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetImageInfoDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq)
        {
            this.GetImageInfoDocumentGridAsync(strPagina, bIndice, nDocIDXarq, null);
        }

        /// <remarks/>
        public void GetImageInfoDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq, object userState)
        {
            if ((this.GetImageInfoDocumentGridOperationCompleted == null))
            {
                this.GetImageInfoDocumentGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageInfoDocumentGridOperationCompleted);
            }
            this.InvokeAsync("GetImageInfoDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq}, this.GetImageInfoDocumentGridOperationCompleted, userState);
        }

        private void OnGetImageInfoDocumentGridOperationCompleted(object arg)
        {
            if ((this.GetImageInfoDocumentGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageInfoDocumentGridCompleted(this, new GetImageInfoDocumentGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileDocument(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho)
        {
            object[] results = this.Invoke("GetFileDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileDocument(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho)
        {
            this.GetFileDocumentAsync(strPagina, bIndice, nDocIDXarq, nTamanho, null);
        }

        /// <remarks/>
        public void GetFileDocumentAsync(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, object userState)
        {
            if ((this.GetFileDocumentOperationCompleted == null))
            {
                this.GetFileDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDocumentOperationCompleted);
            }
            this.InvokeAsync("GetFileDocument", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho}, this.GetFileDocumentOperationCompleted, userState);
        }

        private void OnGetFileDocumentOperationCompleted(object arg)
        {
            if ((this.GetFileDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDocumentCompleted(this, new GetFileDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileDocumentGrid", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, int nLinha, int nColuna)
        {
            object[] results = this.Invoke("GetFileDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileDocumentGrid(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileDocumentGrid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, int nLinha, int nColuna)
        {
            this.GetFileDocumentGridAsync(strPagina, bIndice, nDocIDXarq, nTamanho, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void GetFileDocumentGridAsync(string strPagina, bool bIndice, int nDocIDXarq, int nTamanho, int nLinha, int nColuna, object userState)
        {
            if ((this.GetFileDocumentGridOperationCompleted == null))
            {
                this.GetFileDocumentGridOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDocumentGridOperationCompleted);
            }
            this.InvokeAsync("GetFileDocumentGrid", new object[] {
                    strPagina,
                    bIndice,
                    nDocIDXarq,
                    nTamanho,
                    nLinha,
                    nColuna}, this.GetFileDocumentGridOperationCompleted, userState);
        }

        private void OnGetFileDocumentGridOperationCompleted(object arg)
        {
            if ((this.GetFileDocumentGridCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDocumentGridCompleted(this, new GetFileDocumentGridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileDocumentAttachment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetFileDocumentAttachment(string strNomeAnexo, int nDocIDXarq)
        {
            object[] results = this.Invoke("GetFileDocumentAttachment", new object[] {
                    strNomeAnexo,
                    nDocIDXarq});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileDocumentAttachment(string strNomeAnexo, int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileDocumentAttachment", new object[] {
                    strNomeAnexo,
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetFileDocumentAttachment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetFileDocumentAttachmentAsync(string strNomeAnexo, int nDocIDXarq)
        {
            this.GetFileDocumentAttachmentAsync(strNomeAnexo, nDocIDXarq, null);
        }

        /// <remarks/>
        public void GetFileDocumentAttachmentAsync(string strNomeAnexo, int nDocIDXarq, object userState)
        {
            if ((this.GetFileDocumentAttachmentOperationCompleted == null))
            {
                this.GetFileDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetFileDocumentAttachment", new object[] {
                    strNomeAnexo,
                    nDocIDXarq}, this.GetFileDocumentAttachmentOperationCompleted, userState);
        }

        private void OnGetFileDocumentAttachmentOperationCompleted(object arg)
        {
            if ((this.GetFileDocumentAttachmentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDocumentAttachmentCompleted(this, new GetFileDocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPDFDocument", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetPDFDocument(int nDocIDXarq, int nTamanho)
        {
            object[] results = this.Invoke("GetPDFDocument", new object[] {
                    nDocIDXarq,
                    nTamanho});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPDFDocument(int nDocIDXarq, int nTamanho, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPDFDocument", new object[] {
                    nDocIDXarq,
                    nTamanho}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetPDFDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetPDFDocumentAsync(int nDocIDXarq, int nTamanho)
        {
            this.GetPDFDocumentAsync(nDocIDXarq, nTamanho, null);
        }

        /// <remarks/>
        public void GetPDFDocumentAsync(int nDocIDXarq, int nTamanho, object userState)
        {
            if ((this.GetPDFDocumentOperationCompleted == null))
            {
                this.GetPDFDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDFDocumentOperationCompleted);
            }
            this.InvokeAsync("GetPDFDocument", new object[] {
                    nDocIDXarq,
                    nTamanho}, this.GetPDFDocumentOperationCompleted, userState);
        }

        private void OnGetPDFDocumentOperationCompleted(object arg)
        {
            if ((this.GetPDFDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDFDocumentCompleted(this, new GetPDFDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentMainFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetDocumentMainFile(string strDocumento)
        {
            object[] results = this.Invoke("GetDocumentMainFile", new object[] {
                    strDocumento});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentMainFile(string strDocumento, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDocumentMainFile", new object[] {
                    strDocumento}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetDocumentMainFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetDocumentMainFileAsync(string strDocumento)
        {
            this.GetDocumentMainFileAsync(strDocumento, null);
        }

        /// <remarks/>
        public void GetDocumentMainFileAsync(string strDocumento, object userState)
        {
            if ((this.GetDocumentMainFileOperationCompleted == null))
            {
                this.GetDocumentMainFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentMainFileOperationCompleted);
            }
            this.InvokeAsync("GetDocumentMainFile", new object[] {
                    strDocumento}, this.GetDocumentMainFileOperationCompleted, userState);
        }

        private void OnGetDocumentMainFileOperationCompleted(object arg)
        {
            if ((this.GetDocumentMainFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentMainFileCompleted(this, new GetDocumentMainFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecialtiesXarq", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSpecialtiesXarq(int nProcIDXarq, out string[] arraySpecialties)
        {
            object[] results = this.Invoke("GetSpecialtiesXarq", new object[] {
                    nProcIDXarq});
            arraySpecialties = ((string[])(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSpecialtiesXarq(int nProcIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSpecialtiesXarq", new object[] {
                    nProcIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetSpecialtiesXarq(System.IAsyncResult asyncResult, out string[] arraySpecialties)
        {
            object[] results = this.EndInvoke(asyncResult);
            arraySpecialties = ((string[])(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetSpecialtiesXarqAsync(int nProcIDXarq)
        {
            this.GetSpecialtiesXarqAsync(nProcIDXarq, null);
        }

        /// <remarks/>
        public void GetSpecialtiesXarqAsync(int nProcIDXarq, object userState)
        {
            if ((this.GetSpecialtiesXarqOperationCompleted == null))
            {
                this.GetSpecialtiesXarqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialtiesXarqOperationCompleted);
            }
            this.InvokeAsync("GetSpecialtiesXarq", new object[] {
                    nProcIDXarq}, this.GetSpecialtiesXarqOperationCompleted, userState);
        }

        private void OnGetSpecialtiesXarqOperationCompleted(object arg)
        {
            if ((this.GetSpecialtiesXarqCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialtiesXarqCompleted(this, new GetSpecialtiesXarqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecialties", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSpecialties(int nProcIDXarq, out string strSpecialties, out string strSpecialtiesID)
        {
            object[] results = this.Invoke("GetSpecialties", new object[] {
                    nProcIDXarq});
            strSpecialties = ((string)(results[1]));
            strSpecialtiesID = ((string)(results[2]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSpecialties(int nProcIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSpecialties", new object[] {
                    nProcIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetSpecialties(System.IAsyncResult asyncResult, out string strSpecialties, out string strSpecialtiesID)
        {
            object[] results = this.EndInvoke(asyncResult);
            strSpecialties = ((string)(results[1]));
            strSpecialtiesID = ((string)(results[2]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetSpecialtiesAsync(int nProcIDXarq)
        {
            this.GetSpecialtiesAsync(nProcIDXarq, null);
        }

        /// <remarks/>
        public void GetSpecialtiesAsync(int nProcIDXarq, object userState)
        {
            if ((this.GetSpecialtiesOperationCompleted == null))
            {
                this.GetSpecialtiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialtiesOperationCompleted);
            }
            this.InvokeAsync("GetSpecialties", new object[] {
                    nProcIDXarq}, this.GetSpecialtiesOperationCompleted, userState);
        }

        private void OnGetSpecialtiesOperationCompleted(object arg)
        {
            if ((this.GetSpecialtiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialtiesCompleted(this, new GetSpecialtiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserID(string strLogin, string strPassword)
        {
            object[] results = this.Invoke("GetUserID", new object[] {
                    strLogin,
                    strPassword});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserID(string strLogin, string strPassword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserID", new object[] {
                    strLogin,
                    strPassword}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetUserID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetUserIDAsync(string strLogin, string strPassword)
        {
            this.GetUserIDAsync(strLogin, strPassword, null);
        }

        /// <remarks/>
        public void GetUserIDAsync(string strLogin, string strPassword, object userState)
        {
            if ((this.GetUserIDOperationCompleted == null))
            {
                this.GetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserID", new object[] {
                    strLogin,
                    strPassword}, this.GetUserIDOperationCompleted, userState);
        }

        private void OnGetUserIDOperationCompleted(object arg)
        {
            if ((this.GetUserIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDCompleted(this, new GetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserIDEncrypted", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserIDEncrypted(string strLoginInfo)
        {
            object[] results = this.Invoke("GetUserIDEncrypted", new object[] {
                    strLoginInfo});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserIDEncrypted(string strLoginInfo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserIDEncrypted", new object[] {
                    strLoginInfo}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetUserIDEncrypted(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetUserIDEncryptedAsync(string strLoginInfo)
        {
            this.GetUserIDEncryptedAsync(strLoginInfo, null);
        }

        /// <remarks/>
        public void GetUserIDEncryptedAsync(string strLoginInfo, object userState)
        {
            if ((this.GetUserIDEncryptedOperationCompleted == null))
            {
                this.GetUserIDEncryptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDEncryptedOperationCompleted);
            }
            this.InvokeAsync("GetUserIDEncrypted", new object[] {
                    strLoginInfo}, this.GetUserIDEncryptedOperationCompleted, userState);
        }

        private void OnGetUserIDEncryptedOperationCompleted(object arg)
        {
            if ((this.GetUserIDEncryptedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDEncryptedCompleted(this, new GetUserIDEncryptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNameEncrypted", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserNameEncrypted(string strIDEncoded)
        {
            object[] results = this.Invoke("GetUserNameEncrypted", new object[] {
                    strIDEncoded});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserNameEncrypted(string strIDEncoded, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserNameEncrypted", new object[] {
                    strIDEncoded}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetUserNameEncrypted(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetUserNameEncryptedAsync(string strIDEncoded)
        {
            this.GetUserNameEncryptedAsync(strIDEncoded, null);
        }

        /// <remarks/>
        public void GetUserNameEncryptedAsync(string strIDEncoded, object userState)
        {
            if ((this.GetUserNameEncryptedOperationCompleted == null))
            {
                this.GetUserNameEncryptedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameEncryptedOperationCompleted);
            }
            this.InvokeAsync("GetUserNameEncrypted", new object[] {
                    strIDEncoded}, this.GetUserNameEncryptedOperationCompleted, userState);
        }

        private void OnGetUserNameEncryptedOperationCompleted(object arg)
        {
            if ((this.GetUserNameEncryptedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameEncryptedCompleted(this, new GetUserNameEncryptedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateImageDetail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateImageDetail(int nImagemID, int nUserID, int nEscala, int nFormato)
        {
            this.Invoke("UpdateImageDetail", new object[] {
                    nImagemID,
                    nUserID,
                    nEscala,
                    nFormato});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateImageDetail(int nImagemID, int nUserID, int nEscala, int nFormato, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateImageDetail", new object[] {
                    nImagemID,
                    nUserID,
                    nEscala,
                    nFormato}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdateImageDetail(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdateImageDetailAsync(int nImagemID, int nUserID, int nEscala, int nFormato)
        {
            this.UpdateImageDetailAsync(nImagemID, nUserID, nEscala, nFormato, null);
        }

        /// <remarks/>
        public void UpdateImageDetailAsync(int nImagemID, int nUserID, int nEscala, int nFormato, object userState)
        {
            if ((this.UpdateImageDetailOperationCompleted == null))
            {
                this.UpdateImageDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImageDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateImageDetail", new object[] {
                    nImagemID,
                    nUserID,
                    nEscala,
                    nFormato}, this.UpdateImageDetailOperationCompleted, userState);
        }

        private void OnUpdateImageDetailOperationCompleted(object arg)
        {
            if ((this.UpdateImageDetailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImageDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateImageMetaDataFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateImageMetaDataFile(int nImagemID, int nLinha, int nColuna)
        {
            this.Invoke("UpdateImageMetaDataFile", new object[] {
                    nImagemID,
                    nLinha,
                    nColuna});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateImageMetaDataFile(int nImagemID, int nLinha, int nColuna, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateImageMetaDataFile", new object[] {
                    nImagemID,
                    nLinha,
                    nColuna}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdateImageMetaDataFile(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdateImageMetaDataFileAsync(int nImagemID, int nLinha, int nColuna)
        {
            this.UpdateImageMetaDataFileAsync(nImagemID, nLinha, nColuna, null);
        }

        /// <remarks/>
        public void UpdateImageMetaDataFileAsync(int nImagemID, int nLinha, int nColuna, object userState)
        {
            if ((this.UpdateImageMetaDataFileOperationCompleted == null))
            {
                this.UpdateImageMetaDataFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateImageMetaDataFileOperationCompleted);
            }
            this.InvokeAsync("UpdateImageMetaDataFile", new object[] {
                    nImagemID,
                    nLinha,
                    nColuna}, this.UpdateImageMetaDataFileOperationCompleted, userState);
        }

        private void OnUpdateImageMetaDataFileOperationCompleted(object arg)
        {
            if ((this.UpdateImageMetaDataFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateImageMetaDataFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsObraDigi", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsObraDigi(string strObra)
        {
            object[] results = this.Invoke("IsObraDigi", new object[] {
                    strObra});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsObraDigi(string strObra, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsObraDigi", new object[] {
                    strObra}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsObraDigi(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsObraDigiAsync(string strObra)
        {
            this.IsObraDigiAsync(strObra, null);
        }

        /// <remarks/>
        public void IsObraDigiAsync(string strObra, object userState)
        {
            if ((this.IsObraDigiOperationCompleted == null))
            {
                this.IsObraDigiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsObraDigiOperationCompleted);
            }
            this.InvokeAsync("IsObraDigi", new object[] {
                    strObra}, this.IsObraDigiOperationCompleted, userState);
        }

        private void OnIsObraDigiOperationCompleted(object arg)
        {
            if ((this.IsObraDigiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsObraDigiCompleted(this, new IsObraDigiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsProcessoDigi", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsProcessoDigi(string strObra, string strProcesso)
        {
            object[] results = this.Invoke("IsProcessoDigi", new object[] {
                    strObra,
                    strProcesso});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsProcessoDigi(string strObra, string strProcesso, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsProcessoDigi", new object[] {
                    strObra,
                    strProcesso}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsProcessoDigi(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsProcessoDigiAsync(string strObra, string strProcesso)
        {
            this.IsProcessoDigiAsync(strObra, strProcesso, null);
        }

        /// <remarks/>
        public void IsProcessoDigiAsync(string strObra, string strProcesso, object userState)
        {
            if ((this.IsProcessoDigiOperationCompleted == null))
            {
                this.IsProcessoDigiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProcessoDigiOperationCompleted);
            }
            this.InvokeAsync("IsProcessoDigi", new object[] {
                    strObra,
                    strProcesso}, this.IsProcessoDigiOperationCompleted, userState);
        }

        private void OnIsProcessoDigiOperationCompleted(object arg)
        {
            if ((this.IsProcessoDigiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProcessoDigiCompleted(this, new IsProcessoDigiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDocumentDigi", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDocumentDigi(string strDocumento)
        {
            object[] results = this.Invoke("IsDocumentDigi", new object[] {
                    strDocumento});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsDocumentDigi(string strDocumento, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsDocumentDigi", new object[] {
                    strDocumento}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsDocumentDigi(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsDocumentDigiAsync(string strDocumento)
        {
            this.IsDocumentDigiAsync(strDocumento, null);
        }

        /// <remarks/>
        public void IsDocumentDigiAsync(string strDocumento, object userState)
        {
            if ((this.IsDocumentDigiOperationCompleted == null))
            {
                this.IsDocumentDigiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDocumentDigiOperationCompleted);
            }
            this.InvokeAsync("IsDocumentDigi", new object[] {
                    strDocumento}, this.IsDocumentDigiOperationCompleted, userState);
        }

        private void OnIsDocumentDigiOperationCompleted(object arg)
        {
            if ((this.IsDocumentDigiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDocumentDigiCompleted(this, new IsDocumentDigiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentDigiList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDocumentDigiList(out int[] arrayDocIDXarq)
        {
            object[] results = this.Invoke("GetDocumentDigiList", new object[0]);
            arrayDocIDXarq = ((int[])(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentDigiList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDocumentDigiList", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDocumentDigiList(System.IAsyncResult asyncResult, out int[] arrayDocIDXarq)
        {
            object[] results = this.EndInvoke(asyncResult);
            arrayDocIDXarq = ((int[])(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDocumentDigiListAsync()
        {
            this.GetDocumentDigiListAsync(null);
        }

        /// <remarks/>
        public void GetDocumentDigiListAsync(object userState)
        {
            if ((this.GetDocumentDigiListOperationCompleted == null))
            {
                this.GetDocumentDigiListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDigiListOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDigiList", new object[0], this.GetDocumentDigiListOperationCompleted, userState);
        }

        private void OnGetDocumentDigiListOperationCompleted(object arg)
        {
            if ((this.GetDocumentDigiListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDigiListCompleted(this, new GetDocumentDigiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerTime", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nYear")]
        public int GetServerTime(out int nMonth, out int nDay, out int nHour, out int nMinute, out int nSecond)
        {
            object[] results = this.Invoke("GetServerTime", new object[0]);
            nMonth = ((int)(results[1]));
            nDay = ((int)(results[2]));
            nHour = ((int)(results[3]));
            nMinute = ((int)(results[4]));
            nSecond = ((int)(results[5]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetServerTime(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetServerTime", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndGetServerTime(System.IAsyncResult asyncResult, out int nMonth, out int nDay, out int nHour, out int nMinute, out int nSecond)
        {
            object[] results = this.EndInvoke(asyncResult);
            nMonth = ((int)(results[1]));
            nDay = ((int)(results[2]));
            nHour = ((int)(results[3]));
            nMinute = ((int)(results[4]));
            nSecond = ((int)(results[5]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetServerTimeAsync()
        {
            this.GetServerTimeAsync(null);
        }

        /// <remarks/>
        public void GetServerTimeAsync(object userState)
        {
            if ((this.GetServerTimeOperationCompleted == null))
            {
                this.GetServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerTime", new object[0], this.GetServerTimeOperationCompleted, userState);
        }

        private void OnGetServerTimeOperationCompleted(object arg)
        {
            if ((this.GetServerTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigiWorkID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDigiWorkID(string strObra, int nObraIDXarq, out string strObraFile)
        {
            object[] results = this.Invoke("GetDigiWorkID", new object[] {
                    strObra,
                    nObraIDXarq});
            strObraFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDigiWorkID(string strObra, int nObraIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDigiWorkID", new object[] {
                    strObra,
                    nObraIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDigiWorkID(System.IAsyncResult asyncResult, out string strObraFile)
        {
            object[] results = this.EndInvoke(asyncResult);
            strObraFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDigiWorkIDAsync(string strObra, int nObraIDXarq)
        {
            this.GetDigiWorkIDAsync(strObra, nObraIDXarq, null);
        }

        /// <remarks/>
        public void GetDigiWorkIDAsync(string strObra, int nObraIDXarq, object userState)
        {
            if ((this.GetDigiWorkIDOperationCompleted == null))
            {
                this.GetDigiWorkIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigiWorkIDOperationCompleted);
            }
            this.InvokeAsync("GetDigiWorkID", new object[] {
                    strObra,
                    nObraIDXarq}, this.GetDigiWorkIDOperationCompleted, userState);
        }

        private void OnGetDigiWorkIDOperationCompleted(object arg)
        {
            if ((this.GetDigiWorkIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigiWorkIDCompleted(this, new GetDigiWorkIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigiProcessID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDigiProcessID(string strProcesso, int nProcIDXarq, int nObraID, string strObraFile, int nUserID, out string strProcessoFile)
        {
            object[] results = this.Invoke("GetDigiProcessID", new object[] {
                    strProcesso,
                    nProcIDXarq,
                    nObraID,
                    strObraFile,
                    nUserID});
            strProcessoFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDigiProcessID(string strProcesso, int nProcIDXarq, int nObraID, string strObraFile, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDigiProcessID", new object[] {
                    strProcesso,
                    nProcIDXarq,
                    nObraID,
                    strObraFile,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDigiProcessID(System.IAsyncResult asyncResult, out string strProcessoFile)
        {
            object[] results = this.EndInvoke(asyncResult);
            strProcessoFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDigiProcessIDAsync(string strProcesso, int nProcIDXarq, int nObraID, string strObraFile, int nUserID)
        {
            this.GetDigiProcessIDAsync(strProcesso, nProcIDXarq, nObraID, strObraFile, nUserID, null);
        }

        /// <remarks/>
        public void GetDigiProcessIDAsync(string strProcesso, int nProcIDXarq, int nObraID, string strObraFile, int nUserID, object userState)
        {
            if ((this.GetDigiProcessIDOperationCompleted == null))
            {
                this.GetDigiProcessIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigiProcessIDOperationCompleted);
            }
            this.InvokeAsync("GetDigiProcessID", new object[] {
                    strProcesso,
                    nProcIDXarq,
                    nObraID,
                    strObraFile,
                    nUserID}, this.GetDigiProcessIDOperationCompleted, userState);
        }

        private void OnGetDigiProcessIDOperationCompleted(object arg)
        {
            if ((this.GetDigiProcessIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigiProcessIDCompleted(this, new GetDigiProcessIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigiSpecialtyID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDigiSpecialtyID(string strEspecialidade, int nEspecialidadeIDXarq, int nProcessoID)
        {
            object[] results = this.Invoke("GetDigiSpecialtyID", new object[] {
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    nProcessoID});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDigiSpecialtyID(string strEspecialidade, int nEspecialidadeIDXarq, int nProcessoID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDigiSpecialtyID", new object[] {
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    nProcessoID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDigiSpecialtyID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDigiSpecialtyIDAsync(string strEspecialidade, int nEspecialidadeIDXarq, int nProcessoID)
        {
            this.GetDigiSpecialtyIDAsync(strEspecialidade, nEspecialidadeIDXarq, nProcessoID, null);
        }

        /// <remarks/>
        public void GetDigiSpecialtyIDAsync(string strEspecialidade, int nEspecialidadeIDXarq, int nProcessoID, object userState)
        {
            if ((this.GetDigiSpecialtyIDOperationCompleted == null))
            {
                this.GetDigiSpecialtyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigiSpecialtyIDOperationCompleted);
            }
            this.InvokeAsync("GetDigiSpecialtyID", new object[] {
                    strEspecialidade,
                    nEspecialidadeIDXarq,
                    nProcessoID}, this.GetDigiSpecialtyIDOperationCompleted, userState);
        }

        private void OnGetDigiSpecialtyIDOperationCompleted(object arg)
        {
            if ((this.GetDigiSpecialtyIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigiSpecialtyIDCompleted(this, new GetDigiSpecialtyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigiDocumentID", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDigiDocumentID(string strDocumento, int nDocIDXarq, int nUserID, out string strDocumentoFile)
        {
            object[] results = this.Invoke("GetDigiDocumentID", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID});
            strDocumentoFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDigiDocumentID(string strDocumento, int nDocIDXarq, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDigiDocumentID", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDigiDocumentID(System.IAsyncResult asyncResult, out string strDocumentoFile)
        {
            object[] results = this.EndInvoke(asyncResult);
            strDocumentoFile = ((string)(results[1]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDigiDocumentIDAsync(string strDocumento, int nDocIDXarq, int nUserID)
        {
            this.GetDigiDocumentIDAsync(strDocumento, nDocIDXarq, nUserID, null);
        }

        /// <remarks/>
        public void GetDigiDocumentIDAsync(string strDocumento, int nDocIDXarq, int nUserID, object userState)
        {
            if ((this.GetDigiDocumentIDOperationCompleted == null))
            {
                this.GetDigiDocumentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigiDocumentIDOperationCompleted);
            }
            this.InvokeAsync("GetDigiDocumentID", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID}, this.GetDigiDocumentIDOperationCompleted, userState);
        }

        private void OnGetDigiDocumentIDOperationCompleted(object arg)
        {
            if ((this.GetDigiDocumentIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigiDocumentIDCompleted(this, new GetDigiDocumentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigiDocumentIDEditable", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDigiDocumentIDEditable(string strDocumento, int nDocIDXarq, int nUserID, out string strDocumentoFile, out bool bEditavel)
        {
            object[] results = this.Invoke("GetDigiDocumentIDEditable", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID});
            strDocumentoFile = ((string)(results[1]));
            bEditavel = ((bool)(results[2]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDigiDocumentIDEditable(string strDocumento, int nDocIDXarq, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDigiDocumentIDEditable", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetDigiDocumentIDEditable(System.IAsyncResult asyncResult, out string strDocumentoFile, out bool bEditavel)
        {
            object[] results = this.EndInvoke(asyncResult);
            strDocumentoFile = ((string)(results[1]));
            bEditavel = ((bool)(results[2]));
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetDigiDocumentIDEditableAsync(string strDocumento, int nDocIDXarq, int nUserID)
        {
            this.GetDigiDocumentIDEditableAsync(strDocumento, nDocIDXarq, nUserID, null);
        }

        /// <remarks/>
        public void GetDigiDocumentIDEditableAsync(string strDocumento, int nDocIDXarq, int nUserID, object userState)
        {
            if ((this.GetDigiDocumentIDEditableOperationCompleted == null))
            {
                this.GetDigiDocumentIDEditableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigiDocumentIDEditableOperationCompleted);
            }
            this.InvokeAsync("GetDigiDocumentIDEditable", new object[] {
                    strDocumento,
                    nDocIDXarq,
                    nUserID}, this.GetDigiDocumentIDEditableOperationCompleted, userState);
        }

        private void OnGetDigiDocumentIDEditableOperationCompleted(object arg)
        {
            if ((this.GetDigiDocumentIDEditableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigiDocumentIDEditableCompleted(this, new GetDigiDocumentIDEditableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDigiDocumentEditable", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDigiDocumentEditable(int nDocIDXarq, out bool bEditavel)
        {
            object[] results = this.Invoke("IsDigiDocumentEditable", new object[] {
                    nDocIDXarq});
            bEditavel = ((bool)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsDigiDocumentEditable(int nDocIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsDigiDocumentEditable", new object[] {
                    nDocIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsDigiDocumentEditable(System.IAsyncResult asyncResult, out bool bEditavel)
        {
            object[] results = this.EndInvoke(asyncResult);
            bEditavel = ((bool)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsDigiDocumentEditableAsync(int nDocIDXarq)
        {
            this.IsDigiDocumentEditableAsync(nDocIDXarq, null);
        }

        /// <remarks/>
        public void IsDigiDocumentEditableAsync(int nDocIDXarq, object userState)
        {
            if ((this.IsDigiDocumentEditableOperationCompleted == null))
            {
                this.IsDigiDocumentEditableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDigiDocumentEditableOperationCompleted);
            }
            this.InvokeAsync("IsDigiDocumentEditable", new object[] {
                    nDocIDXarq}, this.IsDigiDocumentEditableOperationCompleted, userState);
        }

        private void OnIsDigiDocumentEditableOperationCompleted(object arg)
        {
            if ((this.IsDigiDocumentEditableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDigiDocumentEditableCompleted(this, new IsDigiDocumentEditableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDocumentEditable", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDocumentEditable(int nDocIDXarq, bool bEditavel, int nUserID)
        {
            object[] results = this.Invoke("UpdateDocumentEditable", new object[] {
                    nDocIDXarq,
                    bEditavel,
                    nUserID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateDocumentEditable(int nDocIDXarq, bool bEditavel, int nUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateDocumentEditable", new object[] {
                    nDocIDXarq,
                    bEditavel,
                    nUserID}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateDocumentEditable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void UpdateDocumentEditableAsync(int nDocIDXarq, bool bEditavel, int nUserID)
        {
            this.UpdateDocumentEditableAsync(nDocIDXarq, bEditavel, nUserID, null);
        }

        /// <remarks/>
        public void UpdateDocumentEditableAsync(int nDocIDXarq, bool bEditavel, int nUserID, object userState)
        {
            if ((this.UpdateDocumentEditableOperationCompleted == null))
            {
                this.UpdateDocumentEditableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentEditableOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentEditable", new object[] {
                    nDocIDXarq,
                    bEditavel,
                    nUserID}, this.UpdateDocumentEditableOperationCompleted, userState);
        }

        private void OnUpdateDocumentEditableOperationCompleted(object arg)
        {
            if ((this.UpdateDocumentEditableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentEditableCompleted(this, new UpdateDocumentEditableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidPage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidPage(string strPagina, int nIDXarq)
        {
            object[] results = this.Invoke("IsValidPage", new object[] {
                    strPagina,
                    nIDXarq});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsValidPage(string strPagina, int nIDXarq, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsValidPage", new object[] {
                    strPagina,
                    nIDXarq}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsValidPage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsValidPageAsync(string strPagina, int nIDXarq)
        {
            this.IsValidPageAsync(strPagina, nIDXarq, null);
        }

        /// <remarks/>
        public void IsValidPageAsync(string strPagina, int nIDXarq, object userState)
        {
            if ((this.IsValidPageOperationCompleted == null))
            {
                this.IsValidPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidPageOperationCompleted);
            }
            this.InvokeAsync("IsValidPage", new object[] {
                    strPagina,
                    nIDXarq}, this.IsValidPageOperationCompleted, userState);
        }

        private void OnIsValidPageOperationCompleted(object arg)
        {
            if ((this.IsValidPageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidPageCompleted(this, new IsValidPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class ImageProperty
    {

        private string strNameField;

        private string strValueField;

        /// <remarks/>
        public string strName
        {
            get
            {
                return this.strNameField;
            }
            set
            {
                this.strNameField = value;
            }
        }

        /// <remarks/>
        public string strValue
        {
            get
            {
                return this.strValueField;
            }
            set
            {
                this.strValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public enum TipoDocumentoDigital
    {

        /// <remarks/>
        NO_TYPE,

        /// <remarks/>
        PROCESSO,

        /// <remarks/>
        ESPECIALIDADE,

        /// <remarks/>
        DOCUMENTO,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void TestImageConversionCompletedEventHandler(object sender, TestImageConversionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestImageConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal TestImageConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidProcessLocalCompletedEventHandler(object sender, IsValidProcessLocalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidProcessLocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidProcessLocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strProcesso
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strObra
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nProcIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strLocalizacao
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nTotalEspecialidades
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidProcessWorkLocalCompletedEventHandler(object sender, IsValidProcessWorkLocalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidProcessWorkLocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidProcessWorkLocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strProcesso
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strObra
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nProcIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nObraIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strLocalizacao
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nTotalEspecialidades
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidProcessCompletedEventHandler(object sender, IsValidProcessCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strProcesso
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strObra
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nProcIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nTotalEspecialidades
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidProcessWorkCompletedEventHandler(object sender, IsValidProcessWorkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidProcessWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidProcessWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strProcesso
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strObra
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nProcIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nObraIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nTotalEspecialidades
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidDocumentCompletedEventHandler(object sender, IsValidDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strDocumento
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nDocIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileCompletedEventHandler(object sender, DigiFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileGridCompletedEventHandler(object sender, DigiFileGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileDocumentCompletedEventHandler(object sender, DigiFileDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileDocumentGridCompletedEventHandler(object sender, DigiFileDocumentGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileDocumentGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileDocumentGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileAttachmentCompletedEventHandler(object sender, DigiFileAttachmentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileAttachmentDocumentDividedCompletedEventHandler(object sender, DigiFileAttachmentDocumentDividedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileAttachmentDocumentDividedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileAttachmentDocumentDividedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DigiFileAttachmentDocumentCompletedEventHandler(object sender, DigiFileAttachmentDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigiFileAttachmentDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DigiFileAttachmentDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAttachmentInfoCompletedEventHandler(object sender, GetAttachmentInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAttachmentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nAnexoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public bool bValidado
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }

        /// <remarks/>
        public bool bCancelado
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strDescricao
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAttachmentInfoDocumentCompletedEventHandler(object sender, GetAttachmentInfoDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentInfoDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAttachmentInfoDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nAnexoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public bool bValidado
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }

        /// <remarks/>
        public bool bCancelado
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strDescricao
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CancelAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiCompletedEventHandler(object sender, BeginDigiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nProcID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public int nEspecialidadeID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[8]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiFileTypeCompletedEventHandler(object sender, BeginDigiFileTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nProcID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public int nEspecialidadeID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[8]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiFileTypeMultipleServerCompletedEventHandler(object sender, BeginDigiFileTypeMultipleServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiFileTypeMultipleServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiFileTypeMultipleServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nProcID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nEspecialidadeID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }

        /// <remarks/>
        public string strPathImage_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }

        /// <remarks/>
        public string strPathImage_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }

        /// <remarks/>
        public string strPathImage_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[11]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[12]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[13]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[14]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiFileTypeMultipleServerGridCompletedEventHandler(object sender, BeginDigiFileTypeMultipleServerGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiFileTypeMultipleServerGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiFileTypeMultipleServerGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nProcID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nEspecialidadeID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }

        /// <remarks/>
        public string strPathImage_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }

        /// <remarks/>
        public string strPathImage_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }

        /// <remarks/>
        public string strPathImage_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[11]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[12]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[13]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[14]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiCompletedEventHandler(object sender, FinishDigiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiFileTypeCompletedEventHandler(object sender, FinishDigiFileTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiFileTypeMultipleServerCompletedEventHandler(object sender, FinishDigiFileTypeMultipleServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiFileTypeMultipleServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiFileTypeMultipleServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiFileTypeMultipleServerGridCompletedEventHandler(object sender, FinishDigiFileTypeMultipleServerGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiFileTypeMultipleServerGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiFileTypeMultipleServerGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiDocumentCompletedEventHandler(object sender, BeginDigiDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nDocID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiDocumentFileTypeCompletedEventHandler(object sender, BeginDigiDocumentFileTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiDocumentFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiDocumentFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nDocID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[7]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiDocumentFileTypeMultipleServerCompletedEventHandler(object sender, BeginDigiDocumentFileTypeMultipleServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiDocumentFileTypeMultipleServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiDocumentFileTypeMultipleServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nDocID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public string strPathImage_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }

        /// <remarks/>
        public string strPathImage_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }

        /// <remarks/>
        public string strPathImage_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[10]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[11]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[12]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[13]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void BeginDigiDocumentFileTypeMultipleServerGridCompletedEventHandler(object sender, BeginDigiDocumentFileTypeMultipleServerGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDigiDocumentFileTypeMultipleServerGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BeginDigiDocumentFileTypeMultipleServerGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nDocID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public string strNomeImagem
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }

        /// <remarks/>
        public string strNomePagina
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }

        /// <remarks/>
        public string strErro
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }

        /// <remarks/>
        public string strPathImage_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }

        /// <remarks/>
        public string strPathImage_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }

        /// <remarks/>
        public string strPathImage_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[10]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_T
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[11]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_M
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[12]));
            }
        }

        /// <remarks/>
        public int nLocalizacaoID_P
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[13]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiDocumentCompletedEventHandler(object sender, FinishDigiDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiDocumentFileTypeCompletedEventHandler(object sender, FinishDigiDocumentFileTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiDocumentFileTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiDocumentFileTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiDocumentFileTypeMultipleServerCompletedEventHandler(object sender, FinishDigiDocumentFileTypeMultipleServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiDocumentFileTypeMultipleServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiDocumentFileTypeMultipleServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void FinishDigiDocumentFileTypeMultipleServerGridCompletedEventHandler(object sender, FinishDigiDocumentFileTypeMultipleServerGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishDigiDocumentFileTypeMultipleServerGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal FinishDigiDocumentFileTypeMultipleServerGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ValidateImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CancelImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void PrintImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool bValidada
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageGridCompletedEventHandler(object sender, GetImageGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool bValidada
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageInfoCompletedEventHandler(object sender, GetImageInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageInfoGridCompletedEventHandler(object sender, GetImageInfoGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageInfoGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageInfoGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nLinhas
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nColunas
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendFilePartCompletedEventHandler(object sender, SendFilePartCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFilePartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendFilePartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileGridCompletedEventHandler(object sender, GetFileGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFilePageIDCompletedEventHandler(object sender, GetFilePageIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePageIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFilePageIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileAttachmentIDCompletedEventHandler(object sender, GetFileAttachmentIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileAttachmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileAttachmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileFromIDCompletedEventHandler(object sender, GetFileFromIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileFromIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileFromIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageDocumentCompletedEventHandler(object sender, GetImageDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool bValidada
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageDocumentGridCompletedEventHandler(object sender, GetImageDocumentGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageDocumentGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageDocumentGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool bValidada
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strPathImage
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageInfoDocumentCompletedEventHandler(object sender, GetImageInfoDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageInfoDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageInfoDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetImageInfoDocumentGridCompletedEventHandler(object sender, GetImageInfoDocumentGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageInfoDocumentGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetImageInfoDocumentGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nImagemID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nEscala
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nFormato
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nLegenda
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nLinhas
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }

        /// <remarks/>
        public int nColunas
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileDocumentCompletedEventHandler(object sender, GetFileDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileDocumentGridCompletedEventHandler(object sender, GetFileDocumentGridCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDocumentGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileDocumentGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetFileDocumentAttachmentCompletedEventHandler(object sender, GetFileDocumentAttachmentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileDocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetPDFDocumentCompletedEventHandler(object sender, GetPDFDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDFDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPDFDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentMainFileCompletedEventHandler(object sender, GetDocumentMainFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentMainFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDocumentMainFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSpecialtiesXarqCompletedEventHandler(object sender, GetSpecialtiesXarqCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialtiesXarqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSpecialtiesXarqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string[] arraySpecialties
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSpecialtiesCompletedEventHandler(object sender, GetSpecialtiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialtiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSpecialtiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strSpecialties
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public string strSpecialtiesID
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserIDCompletedEventHandler(object sender, GetUserIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserIDEncryptedCompletedEventHandler(object sender, GetUserIDEncryptedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDEncryptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserIDEncryptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserNameEncryptedCompletedEventHandler(object sender, GetUserNameEncryptedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameEncryptedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserNameEncryptedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateImageDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateImageMetaDataFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsObraDigiCompletedEventHandler(object sender, IsObraDigiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsObraDigiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsObraDigiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsProcessoDigiCompletedEventHandler(object sender, IsProcessoDigiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProcessoDigiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsProcessoDigiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsDocumentDigiCompletedEventHandler(object sender, IsDocumentDigiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDocumentDigiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsDocumentDigiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDocumentDigiListCompletedEventHandler(object sender, GetDocumentDigiListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDigiListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDocumentDigiListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public int[] arrayDocIDXarq
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetServerTimeCompletedEventHandler(object sender, GetServerTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public int nMonth
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }

        /// <remarks/>
        public int nDay
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }

        /// <remarks/>
        public int nHour
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }

        /// <remarks/>
        public int nMinute
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }

        /// <remarks/>
        public int nSecond
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDigiWorkIDCompletedEventHandler(object sender, GetDigiWorkIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigiWorkIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDigiWorkIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strObraFile
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDigiProcessIDCompletedEventHandler(object sender, GetDigiProcessIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigiProcessIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDigiProcessIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strProcessoFile
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDigiSpecialtyIDCompletedEventHandler(object sender, GetDigiSpecialtyIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigiSpecialtyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDigiSpecialtyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDigiDocumentIDCompletedEventHandler(object sender, GetDigiDocumentIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigiDocumentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDigiDocumentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strDocumentoFile
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetDigiDocumentIDEditableCompletedEventHandler(object sender, GetDigiDocumentIDEditableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigiDocumentIDEditableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDigiDocumentIDEditableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }

        /// <remarks/>
        public string strDocumentoFile
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public bool bEditavel
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsDigiDocumentEditableCompletedEventHandler(object sender, IsDigiDocumentEditableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDigiDocumentEditableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsDigiDocumentEditableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public bool bEditavel
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateDocumentEditableCompletedEventHandler(object sender, UpdateDocumentEditableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentEditableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateDocumentEditableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void IsValidPageCompletedEventHandler(object sender, IsValidPageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsValidPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}